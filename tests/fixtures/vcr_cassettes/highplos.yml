http_interactions:
- request:
    method: get
    uri: http://api.plos.org/search?q=alcohol&wt=json&start=0&rows=10&hl.fl=abstract&hl=true
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/3.2 crul/0.5.2
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      server: nginx/1.12.2
      date: Thu, 24 May 2018 05:20:16 GMT
      content-type: application/json; charset=UTF-8
      transfer-encoding: chunked
      connection: keep-alive
      last-modified: Wed, 23 May 2018 20:20:59 GMT
      etag: '"YzUxNjE4MDAwMDAwMDAwMFNvbHI="'
    body:
      encoding: ASCII-8BIT
      string: eyJyZXNwb25zZSI6eyJudW1Gb3VuZCI6Mjc2MTQsInN0YXJ0IjowLCJtYXhTY29yZSI6NC42ODkzNjEsImRvY3MiOlt7ImlkIjoiMTAuMTM3MS9qb3VybmFsLnBvbmUuMDE4NTQ1NyIsImpvdXJuYWwiOiJQTE9TIE9ORSIsImVpc3NuIjoiMTkzMi02MjAzIiwicHVibGljYXRpb25fZGF0ZSI6IjIwMTctMDktMjhUMDA6MDA6MDBaIiwiYXJ0aWNsZV90eXBlIjoiUmVzZWFyY2ggQXJ0aWNsZSIsImF1dGhvcl9kaXNwbGF5IjpbIkphY3F1ZWxpbmUgV2lsbG1vcmUiLCJUZXJyeS1MeW5uZSBNYXJrbyIsIkRhcmNpZSBUYWluZyIsIkh1Z3VlcyBTYW1wYXNhLUthbnlpbmdhIl0sImFic3RyYWN0IjpbIk9iamVjdGl2ZXM6IEFsY29ob2wtcmVsYXRlZCBtb3JiaWRpdHkgYW5kIG1vcnRhbGl0eSBhcmUgc2lnbmlmaWNhbnQgcHVibGljIGhlYWx0aCBpc3N1ZXMuIFRoZSBwdXJwb3NlIG9mIHRoaXMgc3R1ZHkgd2FzIHRvIGRlc2NyaWJlIHRoZSBwcmV2YWxlbmNlIGFuZCB0cmVuZHMgb3ZlciB0aW1lIG9mIGFsY29ob2wgY29uc3VtcHRpb24gYW5kIGFsY29ob2wtcmVsYXRlZCBtb3JiaWRpdHkgYW5kIG1vcnRhbGl0eTsgYW5kIHB1YmxpYyBhdHRpdHVkZXMgb2YgYWxjb2hvbCB1c2UgaW1wYWN0cyBvbiBmYW1pbGllcyBhbmQgdGhlIGNvbW11bml0eSBpbiBPdHRhd2EsIENhbmFkYS4gTWV0aG9kczogUHJldmFsZW5jZSAoMjAxM+KAkzIwMTQpIGFuZCB0cmVuZHMgKDIwMDDigJMyMDAxIHRvIDIwMTPigJMyMDE0KSBvZiBhbGNvaG9sIHVzZSB3ZXJlIG9idGFpbmVkIGZyb20gdGhlIENhbmFkaWFuIENvbW11bml0eSBIZWFsdGggU3VydmV5LiBEYXRhIG9uIHBhcmFtZWRpYyByZXNwb25zZXMgKDIwMTUpLCBlbWVyZ2VuY3kgZGVwYXJ0bWVudCAoRUQpIHZpc2l0cyAoMjAxM+KAkzIwMTUpLCBob3NwaXRhbGl6YXRpb25zICgyMDEz4oCTMjAxNSkgYW5kIGRlYXRocyAoMjAwN+KAkzIwMTEpIHdlcmUgdXNlZCB0byBxdWFudGlmeSB0aGUgYWN1dGUgYW5kIGNocm9uaWMgaGVhbHRoIGVmZmVjdHMgb2YgYWxjb2hvbCBpbiBPdHRhd2EuIFF1YWxpdGF0aXZlIGRhdGEgd2VyZSBvYnRhaW5lZCBmcm9tIHRoZSDigJxIYXZlIFlvdXIgU2F54oCdIGFsY29ob2wgc3VydmV5LCBhbiBvbmxpbmUgc3VydmV5IG9mIHB1YmxpYyBhdHRpdHVkZXMgb24gYWxjb2hvbCBjb25kdWN0ZWQgaW4gMjAxNi4gUmVzdWx0czogSW4gMjAxM+KAkzIwMTQsIGFuIGVzdGltYXRlZCA1OTUsMzAwICg4MyUpIE90dGF3YSBhZHVsdHMgMTkgeWVhcnMgYW5kIG9sZGVyIGRyYW5rIGFsY29ob2wsIDQyJSByZXBvcnRlZCBiaW5nZSBkcmlua2luZyBpbiB0aGUgcGFzdCB5ZWFyLiBIZWF2eSBkcmlua2luZyBpbmNyZWFzZWQgZnJvbSAxNSUgaW4gMjAwMOKAkzIwMDEgdG8gMjAlIGluIDIwMTPigJMyMDE0LiBJbiAyMDE1LCB0aGUgT3R0YXdhIFBhcmFtZWRpYyBTZXJ2aWNlIHJlc3BvbmRlZCB0byAyLDA2MCBjYWxscyBkaXJlY3RseSBhdHRyaWJ1dGFibGUgdG8gYWxjb2hvbC4gQmV0d2VlbiAyMDEzIGFuZCAyMDE1LCB0aGVyZSB3ZXJlIGFuIGF2ZXJhZ2Ugb2YgNiwxMDAgRUQgdmlzaXRzIGFuZCAxLDI3MCBob3NwaXRhbGl6YXRpb25zIHBlciB5ZWFyIGR1ZSB0byBhbGNvaG9sLiBBbm51YWxseSwgYWxjb2hvbCB1c2UgcmVzdWx0cyBpbiBhdCBsZWFzdCAxNDAgZGVhdGhzIGluIE90dGF3YS4gTWVuIGhhdmUgaGlnaGVyIHJhdGVzIG9mIGFsY29ob2wtYXR0cmlidXRhYmxlIHBhcmFtZWRpYyByZXNwb25zZXMsIEVEIHZpc2l0cywgaG9zcGl0YWxpemF0aW9ucyBhbmQgZGVhdGhzIHRoYW4gd29tZW4sIGFuZCB5b3VuZyBhZHVsdHMgaGF2ZSBoaWdoZXIgcmF0ZXMgb2YgYWxjb2hvbC1hdHRyaWJ1dGFibGUgcGFyYW1lZGljIHJlc3BvbnNlcy4gUXVhbGl0YXRpdmUgZGF0YSBvZiBwdWJsaWMgYXR0aXR1ZGVzIGluZGljYXRlIHRoYXQgYWxjb2hvbCBtaXN1c2UgaGFzIGdyZWF0ZXIgcmVwZXJjdXNzaW9ucyBub3Qgb25seSBvbiB0aG9zZSB3aG8gZHJpbmssIGJ1dCBhbHNvIG9uIHRoZSBmYW1pbHkgYW5kIGNvbW11bml0eS4gQ29uY2x1c2lvbnM6IFJlc3VsdHMgaGlnaGxpZ2h0IHRoZSBuZWVkIGZvciBoZWFsdGh5IHB1YmxpYyBwb2xpY3kgaW50ZW5kZWQgdG8gZW5jb3VyYWdlIGEgY3VsdHVyZSBvZiBkcmlua2luZyBpbiBtb2RlcmF0aW9uIGluIE90dGF3YSB0byBzdXBwb3J0IGxvd2VyIHJpc2sgYWxjb2hvbCB1c2UsIHBhcnRpY3VsYXJseSBhbW9uZyBtZW4gYW5kIHlvdW5nIGFkdWx0cy4gIl0sInRpdGxlX2Rpc3BsYXkiOiJUaGUgYnVyZGVuIG9mIGFsY29ob2wtcmVsYXRlZCBtb3JiaWRpdHkgYW5kIG1vcnRhbGl0eSBpbiBPdHRhd2EsIENhbmFkYSIsInNjb3JlIjo0LjY4OTM2MX0seyJpZCI6IjEwLjEzNzEvam91cm5hbC5wb25lLjAwNzEyODQiLCJqb3VybmFsIjoiUExvUyBPTkUiLCJlaXNzbiI6IjE5MzItNjIwMyIsInB1YmxpY2F0aW9uX2RhdGUiOiIyMDEzLTA4LTIwVDAwOjAwOjAwWiIsImFydGljbGVfdHlwZSI6IlJlc2VhcmNoIEFydGljbGUiLCJhdXRob3JfZGlzcGxheSI6WyJQZXRyYSBTdWNoYW5rb3ZhIiwiUGlhIFN0ZWVuc2xhbmQiLCJJZGEgRnJlZHJpa3Nzb24iLCJKw7ZyZ2VuIEEuIEVuZ2VsIiwiRWxpc2FiZXQgSmVybGhhZyJdLCJhYnN0cmFjdCI6WyJcbkFsY29ob2wgZGVwZW5kZW5jZSBpcyBhIGhldGVyb2dlbmVvdXMgZGlzb3JkZXIgd2hlcmUgc2V2ZXJhbCBzaWduYWxsaW5nIHN5c3RlbXMgcGxheSBpbXBvcnRhbnQgcm9sZXMuIFJlY2VudCBzdHVkaWVzIGltcGxpY2F0ZSB0aGF0IHRoZSBndXQtYnJhaW4gaG9ybW9uZSBnaHJlbGluLCBhbiBvcmV4aWdlbmljIHBlcHRpZGUsIGlzIGEgcG90ZW50aWFsIG1lZGlhdG9yIG9mIGFsY29ob2wgcmVsYXRlZCBiZWhhdmlvdXJzLiBHaHJlbGluIGluY3JlYXNlcyB3aGVyZWFzIGEgZ2hyZWxpbiByZWNlcHRvciAoR0hTLVIxQSkgYW50YWdvbmlzdCBkZWNyZWFzZXMgYWxjb2hvbCBjb25zdW1wdGlvbiBhcyB3ZWxsIGFzIG9wZXJhbnQgc2VsZi1hZG1pbmlzdHJhdGlvbiBvZiBhbGNvaG9sIGluIHJvZGVudHMgdGhhdCBoYXZlIGNvbnN1bWVkIGFsY29ob2wgZm9yIHR3ZWx2ZSB3ZWVrcy4gSW4gdGhlIHByZXNlbnQgc3R1ZHkgd2UgYWltZWQgYXQgaW52ZXN0aWdhdGluZyB0aGUgZWZmZWN0IG9mIGFjdXRlIGFuZCByZXBlYXRlZCB0cmVhdG1lbnQgd2l0aCB0aGUgR0hTLVIxQSBhbnRhZ29uaXN0IEpNVjI5NTkgb24gYWxjb2hvbCBpbnRha2UgaW4gYSBncm91cCBvZiByYXRzIGZvbGxvd2luZyB2b2x1bnRhcmlseSBhbGNvaG9sIGNvbnN1bXB0aW9uIGZvciB0d28sIGZpdmUgYW5kIGVpZ2h0IG1vbnRocy4gQWZ0ZXIgYXBwcm94aW1hdGVseSB0ZW4gbW9udGhzIG9mIHZvbHVudGFyeSBhbGNvaG9sIGNvbnN1bXB0aW9uIHRoZSBleHByZXNzaW9uIG9mIHRoZSBHSFMtUjFBIGdlbmUgKEdoc3IpIGFzIHdlbGwgYXMgdGhlIGRlZ3JlZSBvZiBtZXRoeWxhdGlvbiBvZiBhIENwRyBpc2xhbmQgZm91bmQgaW4gR2hzciB3YXMgZXhhbWluZWQgaW4gcmV3YXJkIHJlbGF0ZWQgYnJhaW4gYXJlYXMuIEluIGEgc2VwYXJhdGUgZ3JvdXAgb2YgcmF0cywgd2UgZXhhbWluZWQgdGhlIGVmZmVjdCBvZiB0aGUgSk1WMjk1OSBvbiBhbGNvaG9sIHJlbGFwc2UgdXNpbmcgdGhlIGFsY29ob2wgZGVwcml2YXRpb24gcGFyYWRpZ20uIEFjdXRlIEpNVjI5NTkgdHJlYXRtZW50IHdhcyBmb3VuZCB0byBkZWNyZWFzZSBhbGNvaG9sIGludGFrZSBhbmQgdGhlIGVmZmVjdCB3YXMgbW9yZSBwcm9ub3VuY2VkIGFmdGVyIGZpdmUsIGNvbXBhcmVkIHRvIHR3byBtb250aHMgb2YgYWxjb2hvbCBleHBvc3VyZS4gSW4gYWRkaXRpb24sIHJlcGVhdGVkIEpNVjI5NTkgdHJlYXRtZW50IGRlY3JlYXNlZCBhbGNvaG9sIGludGFrZSB3aXRob3V0IGluZHVjaW5nIHRvbGVyYW5jZSBvciByZWJvdW5kIGluY3JlYXNlIGluIGFsY29ob2wgaW50YWtlIGFmdGVyIHRoZSB0cmVhdG1lbnQuIFRoZSBHSFMtUjFBIGFudGFnb25pc3QgcHJldmVudGVkIHRoZSBhbGNvaG9sIGRlcHJpdmF0aW9uIGVmZmVjdCBpbiByYXRzLiBUaGVyZSB3YXMgYSBzaWduaWZpY2FudCBkb3duLXJlZ3VsYXRpb24gb2YgdGhlIEdoc3IgZXhwcmVzc2lvbiBpbiB0aGUgdmVudHJhbCB0ZWdtZW50YWwgYXJlYSAoVlRBKSBpbiBoaWdoLSBjb21wYXJlZCB0byBsb3ctYWxjb2hvbCBjb25zdW1pbmcgcmF0cyBhZnRlciBhcHByb3hpbWF0ZWx5IHRlbiBtb250aHMgb2Ygdm9sdW50YXJ5IGFsY29ob2wgY29uc3VtcHRpb24uIEZ1cnRoZXIgYW5hbHlzaXMgcmV2ZWFsZWQgYSBuZWdhdGl2ZSBjb3JyZWxhdGlvbiBiZXR3ZWVuIEdoc3IgZXhwcmVzc2lvbiBpbiB0aGUgVlRBIGFuZCBhbGNvaG9sIGludGFrZS4gTm8gZGlmZmVyZW5jZXMgaW4gbWV0aHlsYXRpb24gZGVncmVlIHdlcmUgZm91bmQgYmV0d2VlbiBoaWdoLSBjb21wYXJlZCB0byBsb3ctYWxjb2hvbCBjb25zdW1pbmcgcmF0cy4gVGhlc2UgZmluZGluZ3Mgc3VwcG9ydCBwcmV2aW91cyBzdHVkaWVzIHNob3dpbmcgdGhhdCB0aGUgZ2hyZWxpbiBzaWduYWxsaW5nIHN5c3RlbSBtYXkgY29uc3RpdHV0ZSBhIHBvdGVudGlhbCB0YXJnZXQgZm9yIGRldmVsb3BtZW50IG9mIG5vdmVsIHRyZWF0bWVudCBzdHJhdGVnaWVzIGZvciBhbGNvaG9sIGRlcGVuZGVuY2UuXG4iXSwidGl0bGVfZGlzcGxheSI6IkdocmVsaW4gUmVjZXB0b3IgKEdIUy1SMUEpIEFudGFnb25pc20gU3VwcHJlc3NlcyBCb3RoIEFsY29ob2wgQ29uc3VtcHRpb24gYW5kIHRoZSBBbGNvaG9sIERlcHJpdmF0aW9uIEVmZmVjdCBpbiBSYXRzIGZvbGxvd2luZyBMb25nLVRlcm0gVm9sdW50YXJ5IEFsY29ob2wgQ29uc3VtcHRpb24iLCJzY29yZSI6NC42ODkyODM0fSx7ImlkIjoiMTAuMTM3MS9qb3VybmFsLnBvbmUuMDAyNzc1MiIsImpvdXJuYWwiOiJQTG9TIE9ORSIsImVpc3NuIjoiMTkzMi02MjAzIiwicHVibGljYXRpb25fZGF0ZSI6IjIwMTEtMTEtMjFUMDA6MDA6MDBaIiwiYXJ0aWNsZV90eXBlIjoiUmVzZWFyY2ggQXJ0aWNsZSIsImF1dGhvcl9kaXNwbGF5IjpbIkJlZW5hIFRob21hcyIsIk1vaGFuYXJhbmkgU3VoYWRldiIsIkphbXVuYSBNYW5pIiwiQi4gR29wYWxhIEdhbmFwYXRoeSIsIkFzYWl0aGFtYmkgQXJtdWdhbSIsIkYuIEZhaXp1bm5pc2hhIiwiTW9oYW5hc3VuZGFyaSBDaGVsbGlhaCIsIkZyYXNlciBXYXJlcyJdLCJhYnN0cmFjdCI6WyJCYWNrZ3JvdW5kOiBUaGUgbmVnYXRpdmUgaW5mbHVlbmNlcyBvZiBhbGNvaG9sIG9uIFRCIG1hbmFnZW1lbnQgd2l0aCByZWdhcmQgdG8gZGVsYXlzIGluIHNlZWtpbmcgY2FyZSBhcyB3ZWxsIGFzIG5vbiBjb21wbGlhbmNlIGZvciB0cmVhdG1lbnQgaGFzIGJlZW4gd2VsbCBkb2N1bWVudGVkLiBUaGlzIHN0dWR5IGlzIHBhcnQgb2YgYSBsYXJnZXIgc3R1ZHkgb24gdGhlIHByZXZhbGVuY2Ugb2YgQVVEIChBbGNvaG9sIFVzZSBEaXNvcmRlcikgYW1vbmcgVEIgcGF0aWVudHMgd2hpY2ggcmV2ZWFsZWQgdGhhdCBhbG1vc3QgYSBxdWFydGVyIG9mIFRCIHBhdGllbnRzIHdobyBjb25zdW1lZCBhbGNvaG9sIGNvdWxkIGJlIGNsYXNzaWZpZWQgYXMgdGhvc2Ugd2hvIGhhZCBBVUQuIEhvd2V2ZXIgdGhlcmUgaXMgZGVhcnRoIG9mIGFueSBlZmZlY3RpdmUgYWxjb2hvbCBpbnRlcnZlbnRpb24gcHJvZ3JhbW1lIGZvciBUQiBwYXRpZW50cyB3aXRoIEFsY29ob2wgVXNlIERpc29yZGVyIChBVUQpLiBNZXRob2RvbG9neTogVGhpcyBxdWFsaXRhdGl2ZSBzdHVkeSB1c2luZyB0aGUgZWNvbG9naWNhbCBzeXN0ZW0gbW9kZWwgd2FzIGRvbmUgdG8gZ2FpbiBpbnNpZ2h0cyBpbnRvIHRoZSBwZXJjZWl2ZWQgZWZmZWN0IG9mIGFsY29ob2wgdXNlIG9uIFRCIHRyZWF0bWVudCBhbmQgcGVyY2VpdmVkIG5lY2Vzc2l0eSBvZiBhbiBpbnRlcnZlbnRpb24gcHJvZ3JhbW1lIGZvciBUQiBwYXRpZW50cyB3aXRoIEFVRC4gV2UgdXNlZCBwdXJwb3NpdmUgc2FtcGxpbmcgdG8gc2VsZWN0IDQ0IG1lbiBmcm9tIDczIFRCIHBhdGllbnRzIHdpdGggYW4gQVVESVQgc2NvcmUgPjguIEZvY3VzIGdyb3VwIGRpc2N1c3Npb25zIChGR0RzKSBhbmQgaW50ZXJ2aWV3cyB3ZXJlIGNvbmR1Y3RlZCB3aXRoIFRCIHBhdGllbnRzIHdpdGggQVVELCB0aGVpciBmYW1pbHkgbWVtYmVycyBhbmQgaGVhbHRoIHByb3ZpZGVycy4gUmVzdWx0czogVEIgcGF0aWVudHMgd2l0aCBBVUQgcmVwb3J0IGV4Y2Vzc2l2ZSBhbGNvaG9sIGludGFrZSBhcyBvbmUgb2YgdGhlIHJlYXNvbnMgZm9yIHRoZWlyIHZ1bG5lcmFiaWxpdHkgZm9yIFRCLiBQZWVyIHByZXNzdXJlIGhhcyBiZWVuIHJlcG9ydGVkIGJ5IG1hbnkgYXMgdGhlIG1haW4gcmVhc29uIGZvciBhbGNvaG9sIGNvbnN1bXB0aW9uLiBUaGUgaW5mbHVlbmNlcyBvZiBhbGNvaG9sIHVzZSBvbiBUQiB0cmVhdG1lbnQgaGFzIGJlZW4gZWxhYm9yYXRlZCBlc3BlY2lhbGx5IHdpdGggcmVnYXJkIHRvIHRoZSBmZWFycyBhcm91bmQgdGhlIGFkdmVyc2UgZWZmZWN0cyBvZiBhbGNvaG9sIG9uIFRCIGRydWdzIGFuZCB0aGUgZmVhciBvZiBiZWluZyByZXByaW1hbmRlZCBieSBoZWFsdGggcHJvdmlkZXJzLiBUaGUgbmVlZCBmb3IgYWxjb2hvbCBpbnRlcnZlbnRpb24gcHJvZ3JhbXMgd2FzIGV4cHJlc3NlZCBieSB0aGUgVEIgcGF0aWVudHMsIHRoZWlyIGZhbWlsaWVzIGFuZCBoZWFsdGggcHJvdmlkZXJzLiBTdWdnZXN0aW9ucyBmb3IgdGhlIGludGVydmVudGlvbiBwcm9ncmFtbWVzIGluY2x1ZGVkIGluZGl2aWR1YWwgYW5kIGdyb3VwIHNlc3Npb25zLCBpbnZvbHZlbWVudCBvZiBmYW1pbHkgbWVtYmVycywgYXVkaW92aXN1YWwgYWlkcyBhbmQgdGhlIGltcG9ydGFuY2Ugb2Ygc2Vuc2l0aXphdGlvbiBieSBoZWFsdGggc3RhZmYuIENvbmNsdXNpb25zOiBUaGUgZmluZGluZ3MgY2FsbCBmb3IgdXJnZW50IG5lZWQgYmFzZWQgaW50ZXJ2ZW50aW9ucyB3aGljaCBuZWVkIHRvIGJlIHBpbG90IHRlc3RlZCB3aXRoIGEgcmFuZG9taXplZCBjb250cm9sIHRyaWFsIHRvIGJyaW5nIG91dCBhIG1vZGVsIGludGVydmVudGlvbiBwcm9ncmFtbWUgZm9yIFRCIHBhdGllbnRzIHdpdGggQVVELiAiXSwidGl0bGVfZGlzcGxheSI6IkZlYXNpYmlsaXR5IG9mIGFuIEFsY29ob2wgSW50ZXJ2ZW50aW9uIFByb2dyYW1tZSBmb3IgVEIgUGF0aWVudHMgd2l0aCBBbGNvaG9sIFVzZSBEaXNvcmRlciAoQVVEKSAtIEEgUXVhbGl0YXRpdmUgU3R1ZHkgZnJvbSBDaGVubmFpLCBTb3V0aCBJbmRpYSIsInNjb3JlIjo0LjY4ODQzMjd9LHsiaWQiOiIxMC4xMzcxL2pvdXJuYWwucG9uZS4wMDMxNDY2Iiwiam91cm5hbCI6IlBMb1MgT05FIiwiZWlzc24iOiIxOTMyLTYyMDMiLCJwdWJsaWNhdGlvbl9kYXRlIjoiMjAxMi0wMi0wOFQwMDowMDowMFoiLCJhcnRpY2xlX3R5cGUiOiJSZXNlYXJjaCBBcnRpY2xlIiwiYXV0aG9yX2Rpc3BsYXkiOlsiTmljaG9sYXMgVy4gR2lscGluIiwiQ2hyaXNhbnRoaSBBLiBLYXJhbmlrYXMiLCJIZWF0aGVyIE4uIFJpY2hhcmRzb24iXSwiYWJzdHJhY3QiOlsiXG4gICAgICAgIEhlYXZ5IGVwaXNvZGljIGRyaW5raW5nIGVhcmx5IGluIGFkb2xlc2NlbmNlIGlzIGFzc29jaWF0ZWQgd2l0aCBpbmNyZWFzZWQgcmlzayBvZiBhZGRpY3Rpb24gYW5kIG90aGVyIHN0cmVzcy1yZWxhdGVkIGRpc29yZGVycyBsYXRlciBpbiBsaWZlLiBUaGlzIHN1Z2dlc3RzIHRoYXQgYWRvbGVzY2VudCBhbGNvaG9sIGFidXNlIGlzIGFuIGVhcmx5IG1hcmtlciBvZiBpbm5hdGUgdnVsbmVyYWJpbGl0eSBhbmQvb3IgYmluZ2UgZXhwb3N1cmUgaW1wYWN0cyB0aGUgZGV2ZWxvcGluZyBicmFpbiB0byBpbmNyZWFzZSB2dWxuZXJhYmlsaXR5IHRvIHRoZXNlIGRpc29yZGVycyBpbiBhZHVsdGhvb2QuIEFuaW1hbCBtb2RlbHMgYXJlIGlkZWFsIGZvciBjbGFyaWZ5aW5nIHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiBhZG9sZXNjZW50IGFuZCBhZHVsdCBhbGNvaG9sIGFidXNlLCBidXQgd2Ugc2hvdyB0aGF0IG1ldGhvZHMgb2YgaW52b2x1bnRhcnkgYWxjb2hvbCBleHBvc3VyZSBhcmUgbm90IGVmZmVjdGl2ZS4gV2UgZGVzY3JpYmUgYW4gb3BlcmFudCBtb2RlbCB0aGF0IHVzZXMgbXVsdGlwbGUgYm91dHMgb2YgaW50ZXJtaXR0ZW50IGFjY2VzcyB0byBzd2VldGVuZWQgYWxjb2hvbCB0byBlbGljaXQgdm9sdW50YXJ5IGJpbmdlIGFsY29ob2wgZHJpbmtpbmcgZWFybHkgaW4gYWRvbGVzY2VuY2UgKOKIvHBvc3RuYXRhbCBkYXlzIDI44oCTNDIpIGluIGdlbmV0aWNhbGx5IGhldGVyb2dlbmVvdXMgbWFsZSBXaXN0YXIgcmF0cy4gV2UgbmV4dCBleGFtaW5lZCB0aGUgZWZmZWN0cyBvZiBhZG9sZXNjZW50IGJpbmdlIGRyaW5raW5nIG9uIGFsY29ob2wgZHJpbmtpbmcgYW5kIGFueGlldHktbGlrZSBiZWhhdmlvciBpbiBkZXBlbmRlbnQgYW5kIG5vbi1kZXBlbmRlbnQgYWR1bHQgcmF0cywgYW5kIGNvdW50ZWQgY29ydGljb3Ryb3Bpbi1yZWxlYXNpbmcgZmFjdG9yIChDUkYpIGNlbGwgaW4gdGhlIGxhdGVyYWwgcG9ydGlvbiBvZiB0aGUgY2VudHJhbCBhbXlnZGFsYSAoQ2VBKSwgYSByZWdpb24gdGhhdCBjb250cmlidXRlcyB0byByZWd1bGF0aW9uIG9mIGFueGlldHktIGFuZCBhbGNvaG9sLXJlbGF0ZWQgYmVoYXZpb3JzLiBBZG9sZXNjZW50IGJpbmdlIGRyaW5raW5nIGRpZCBub3QgYWx0ZXIgYWxjb2hvbCBkcmlua2luZyB1bmRlciBiYXNlbGluZSBkcmlua2luZyBjb25kaXRpb25zIGluIGFkdWx0aG9vZC4gSG93ZXZlciwgYWxjb2hvbC1kZXBlbmRlbnQgYW5kIG5vbi1kZXBlbmRlbnQgYWR1bHQgcmF0cyB3aXRoIGEgaGlzdG9yeSBvZiBhZG9sZXNjZW50IGFsY29ob2wgYmluZ2UgZHJpbmtpbmcgZGlkIGV4aGliaXQgaW5jcmVhc2VkIGFsY29ob2wgZHJpbmtpbmcgd2hlbiBhY2Nlc3MgdG8gYWxjb2hvbCB3YXMgaW50ZXJtaXR0ZW50LiBBZHVsdCByYXRzIHRoYXQgYmluZ2VkIGFsY29ob2wgZHVyaW5nIGFkb2xlc2NlbmNlIGV4aGliaXRlZCBpbmNyZWFzZWQgZXhwbG9yYXRpb24gb24gdGhlIG9wZW4gYXJtcyBvZiB0aGUgZWxldmF0ZWQgcGx1cyBtYXplIChwb3NzaWJseSBpbmRpY2F0aW5nIGVpdGhlciBkZWNyZWFzZWQgYW54aWV0eSBvciBpbmNyZWFzZWQgaW1wdWxzaXZpdHkpLCBhbiBlZmZlY3QgdGhhdCB3YXMgcmV2ZXJzZWQgYnkgYSBoaXN0b3J5IG9mIGFsY29ob2wgZGVwZW5kZW5jZSBkdXJpbmcgYWR1bHRob29kLiBGaW5hbGx5LCBDUkYgY2VsbCBjb3VudHMgd2VyZSByZWR1Y2VkIGluIHRoZSBsYXRlcmFsIENlQSBvZiByYXRzIHdpdGggYWRvbGVzY2VudCBhbGNvaG9sIGJpbmdlIGhpc3RvcnksIHN1Z2dlc3Rpbmcgc2VtaS1wZXJtYW5lbnQgY2hhbmdlcyBpbiB0aGUgbGltYmljIHN0cmVzcyBwZXB0aWRlIHN5c3RlbSB3aXRoIHRoaXMgdHJlYXRtZW50LiBUaGVzZSBkYXRhIHN1Z2dlc3QgdGhhdCB2b2x1bnRhcnkgYmluZ2UgZHJpbmtpbmcgZHVyaW5nIGVhcmx5IGFkb2xlc2NlbmNlIHByb2R1Y2VzIGxvbmctbGFzdGluZyBuZXVyYWwgYW5kIGJlaGF2aW9yYWwgZWZmZWN0cyB3aXRoIGltcGxpY2F0aW9ucyBmb3IgYW54aWV0eSBhbmQgYWxjb2hvbCB1c2UgZGlzb3JkZXJzLlxuICAgICAgIl0sInRpdGxlX2Rpc3BsYXkiOiJBZG9sZXNjZW50IEJpbmdlIERyaW5raW5nIExlYWRzIHRvIENoYW5nZXMgaW4gQWxjb2hvbCBEcmlua2luZywgQW54aWV0eSwgYW5kIEFteWdkYWxhciBDb3J0aWNvdHJvcGluIFJlbGVhc2luZyBGYWN0b3IgQ2VsbHMgaW4gQWR1bHRob29kIGluIE1hbGUgUmF0cyIsInNjb3JlIjo0LjY4NzAzMzd9LHsiaWQiOiIxMC4xMzcxL2pvdXJuYWwucG1lZC4wMDQwMTUxIiwiam91cm5hbCI6IlBMb1MgTWVkaWNpbmUiLCJlaXNzbiI6IjE1NDktMTY3NiIsInB1YmxpY2F0aW9uX2RhdGUiOiIyMDA3LTA0LTI0VDAwOjAwOjAwWiIsImFydGljbGVfdHlwZSI6IlJlc2VhcmNoIEFydGljbGUiLCJhdXRob3JfZGlzcGxheSI6WyJEb25hbGQgQSBCcmFuZCIsIk1pY2hhZWxhIFNhaXNhbmEiLCJMaXNhIEEgUnlubiIsIkZ1bHZpYSBQZW5ub25pIiwiQWxiZXJ0IEIgTG93ZW5mZWxzIl0sImFic3RyYWN0IjpbIkJhY2tncm91bmQ6IEFsY29ob2wgY29uc3VtcHRpb24gY2F1c2VzIGFuIGVzdGltYXRlZCA0JSBvZiB0aGUgZ2xvYmFsIGRpc2Vhc2UgYnVyZGVuLCBwcm9tcHRpbmcgZ292ZXJtZW50cyB0byBpbXBvc2UgcmVndWxhdGlvbnMgdG8gbWl0aWdhdGUgdGhlIGFkdmVyc2UgZWZmZWN0cyBvZiBhbGNvaG9sLiBUbyBhc3Npc3QgcHVibGljIGhlYWx0aCBsZWFkZXJzIGFuZCBwb2xpY3ltYWtlcnMsIHRoZSBhdXRob3JzIGRldmVsb3BlZCBhIGNvbXBvc2l0ZSBpbmRpY2F0b3LigJR0aGUgQWxjb2hvbCBQb2xpY3kgSW5kZXjigJR0byBnYXVnZSB0aGUgc3RyZW5ndGggb2YgYSBjb3VudHJ5J3MgYWxjb2hvbCBjb250cm9sIHBvbGljaWVzLiBNZXRob2RzIGFuZCBGaW5kaW5nczogVGhlIEluZGV4IGdlbmVyYXRlcyBhIHNjb3JlIGJhc2VkIG9uIHBvbGljaWVzIGZyb20gZml2ZSByZWd1bGF0b3J5IGRvbWFpbnPigJRwaHlzaWNhbCBhdmFpbGFiaWxpdHkgb2YgYWxjb2hvbCwgZHJpbmtpbmcgY29udGV4dCwgYWxjb2hvbCBwcmljZXMsIGFsY29ob2wgYWR2ZXJ0aXNpbmcsIGFuZCBvcGVyYXRpb24gb2YgbW90b3IgdmVoaWNsZXMuIFRoZSBJbmRleCB3YXMgYXBwbGllZCB0byB0aGUgMzAgY291bnRyaWVzIHRoYXQgY29tcG9zZSB0aGUgT3JnYW5pemF0aW9uIGZvciBFY29ub21pYyBDb29wZXJhdGlvbiBhbmQgRGV2ZWxvcG1lbnQgYW5kIHJlZ3Jlc3Npb24gYW5hbHlzaXMgd2FzIHVzZWQgdG8gZXhhbWluZSB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gcG9saWN5IHNjb3JlIGFuZCBwZXIgY2FwaXRhIGFsY29ob2wgY29uc3VtcHRpb24uIENvdW50cmllcyBhdHRhaW5lZCBhIG1lZGlhbiBzY29yZSBvZiA0Mi40IG9mIGEgcG9zc2libGUgMTAwIHBvaW50cywgcmFuZ2luZyBmcm9tIDE0LjUgKEx1eGVtYm91cmcpIHRvIDY3LjMgKE5vcndheSkuIFRoZSBhbmFseXNpcyByZXZlYWxlZCBhIHN0cm9uZyBuZWdhdGl2ZSBjb3JyZWxhdGlvbiBiZXR3ZWVuIHNjb3JlIGFuZCBjb25zdW1wdGlvbiAociA9IOKIkjAuNTc7IHAgPSAwLjAwMSk6IGEgMTAtcG9pbnQgaW5jcmVhc2UgaW4gdGhlIHNjb3JlIHdhcyBhc3NvY2lhdGVkIHdpdGggYSBvbmUtbGl0ZXIgZGVjcmVhc2UgaW4gYWJzb2x1dGUgYWxjb2hvbCBjb25zdW1wdGlvbiBwZXIgcGVyc29uIHBlciB5ZWFyICg5NSUgY29uZmlkZW5jZSBpbnRlcnZhbCwgMC404oCTMS41IGwpLiBBIHNlbnNpdGl2aXR5IGFuYWx5c2lzIGRlbW9uc3RyYXRlZCB0aGUgcm9idXN0bmVzcyBvZiB0aGUgSW5kZXggYnkgc2hvd2luZyB0aGF0IGNvdW50cmllcycgc2NvcmVzIGFuZCByYW5rcyByZW1haW5lZCByZWxhdGl2ZWx5IHN0YWJsZSBpbiByZXNwb25zZSB0byB2YXJpYXRpb25zIGluIG1ldGhvZG9sb2dpY2FsIGFzc3VtcHRpb25zLiBDb25jbHVzaW9uczogVGhlIHN0cmVuZ3RoIG9mIGFsY29ob2wgY29udHJvbCBwb2xpY2llcywgYXMgZXN0aW1hdGVkIGJ5IHRoZSBBbGNvaG9sIFBvbGljeSBJbmRleCwgdmFyaWVkIHdpZGVseSBhbW9uZyAzMCBjb3VudHJpZXMgbG9jYXRlZCBpbiBFdXJvcGUsIEFzaWEsIE5vcnRoIEFtZXJpY2EsIGFuZCBBdXN0cmFsaWEuIFRoZSBzdHVkeSByZXZlYWxlZCBhIGNsZWFyIGludmVyc2UgcmVsYXRpb25zaGlwIGJldHdlZW4gcG9saWN5IHN0cmVuZ3RoIGFuZCBhbGNvaG9sIGNvbnN1bXB0aW9uLiBUaGUgSW5kZXggcHJvdmlkZXMgYSBzdHJhaWdodGZvcndhcmQgdG9vbCBmb3IgZmFjaWxpdGF0aW5nIGludGVybmF0aW9uYWwgY29tcGFyaXNvbnMuIEluIGFkZGl0aW9uLCBpdCBjYW4gaGVscCBwb2xpY3ltYWtlcnMgcmV2aWV3IGFuZCBzdHJlbmd0aGVuIGV4aXN0aW5nIHJlZ3VsYXRpb25zIGFpbWVkIGF0IG1pbmltaXppbmcgYWxjb2hvbC1yZWxhdGVkIGhhcm0gYW5kIGVzdGltYXRlIHRoZSBsaWtlbHkgaW1wYWN0IG9mIHBvbGljeSBjaGFuZ2VzLiBcbiAgICAgICAgVXNpbmcgYW4gaW5kZXggdGhhdCBnYXVnZXMgdGhlIHN0cmVuZ3RoIG9mIG5hdGlvbmFsIGFsY29ob2wgcG9saWNpZXMsIGEgY2xlYXIgaW52ZXJzZSByZWxhdGlvbnNoaXAgd2FzIGZvdW5kIGJldHdlZW4gcG9saWN5IHN0cmVuZ3RoIGFuZCBhbGNvaG9sIGNvbnN1bXB0aW9uLlxuICAgICAgQmFja2dyb3VuZC46IEFsY29ob2wgZHJpbmtpbmcgaXMgbm93IHJlY29nbml6ZWQgYXMgb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCByaXNrcyB0byBodW1hbiBoZWFsdGguIFByZXZpb3VzIHJlc2VhcmNoIHN0dWRpZXMgKHNlZSB0aGUgcmVzZWFyY2ggYXJ0aWNsZSBieSBSb2RnZXJzIGV0IGFsLiwgbGlua2VkIGJlbG93KSBoYXZlIHByZWRpY3RlZCB0aGF0IGFyb3VuZCA0JSBvZiB0aGUgYnVyZGVuIG9mIGRpc2Vhc2Ugd29ybGR3aWRlIGNvbWVzIGFib3V0IGFzIGEgcmVzdWx0IG9mIGRyaW5raW5nIGFsY29ob2wsIHdoaWNoIGNhbiBiZSBhIGZhY3RvciBpbiBhIHdpZGUgcmFuZ2Ugb2YgaGVhbHRoIHByb2JsZW1zLiBUaGVzZSBpbmNsdWRlIGNocm9uaWMgZGlzZWFzZXMgc3VjaCBhcyBjaXJyaG9zaXMgb2YgdGhlIGxpdmVyIGFuZCBjZXJ0YWluIGNhbmNlcnMsIGFzIHdlbGwgYXMgcG9vciBoZWFsdGggcmVzdWx0aW5nIGZyb20gdHJhdW1hLCB2aW9sZW5jZSwgYW5kIGFjY2lkZW50YWwgaW5qdXJpZXMuIEZvciB0aGVzZSByZWFzb25zLCBtb3N0IGdvdmVybm1lbnRzIHRyeSB0byBjb250cm9sIHRoZSBjb25zdW1wdGlvbiBvZiBhbGNvaG9sIHRocm91Z2ggbGF3cywgYWx0aG91Z2ggdmVyeSBmZXcgY291bnRyaWVzIGJhbiBhbGNvaG9sIGVudGlyZWx5LiBXaHkgV2FzIFRoaXMgU3R1ZHkgRG9uZT86IEFsdGhvdWdoIGJvZGllcyBzdWNoIGFzIHRoZSBXb3JsZCBIZWFsdGggQXNzZW1ibHkgaGF2ZSByZWNvbW1lbmRlZCB0aGF0IGl0cyBtZW1iZXIgY291bnRyaWVzIGRldmVsb3AgbmF0aW9uYWwgY29udHJvbCBwb2xpY2llcyB0byBwcmV2ZW50IGV4Y2Vzc2l2ZSBhbGNvaG9sIHVzZSwgdGhlcmUgaXMgYSBodWdlIHZhcmlhdGlvbiBiZXR3ZWVuIG5hdGlvbmFsIHBvbGljaWVzLiBJdCBpcyBhbHNvIHZlcnkgdW5jbGVhciB3aGV0aGVyIHRoZXJlIGlzIGFueSBsaW5rIGJldHdlZW4gdGhlIHN0cmljdG5lc3Mgb2YgbGVnaXNsYXRpb24gcmVnYXJkaW5nIGFsY29ob2wgY29udHJvbCBpbiBhbnkgZ2l2ZW4gY291bnRyeSBhbmQgaG93IG11Y2ggcGVvcGxlIGluIHRoYXQgY291bnRyeSBhY3R1YWxseSBkcmluay4gV2hhdCBEaWQgdGhlIFJlc2VhcmNoZXJzIERvIGFuZCBGaW5kPzogVGhlIHJlc2VhcmNoZXJzIGNhcnJ5aW5nIG91dCB0aGlzIHN0dWR5IGhhZCB0d28gYnJvYWQgZ29hbHMuIEZpcnN0LCB0aGV5IHdhbnRlZCB0byBkZXZlbG9wIGFuIGluZGV4IChvciBzY29yaW5nIHN5c3RlbSkgdGhhdCB3b3VsZCBhbGxvdyB0aGVtIGFuZCBvdGhlcnMgdG8gcmF0ZSB0aGUgc3RyZW5ndGggb2YgYW55IGdpdmVuIGNvdW50cnkncyBhbGNvaG9sIGNvbnRyb2wgcG9saWN5LiBTZWNvbmQsIHRoZXkgd2FudGVkIHRvIHNlZSB3aGV0aGVyIHRoZXJlIGlzIGFueSBsaW5rIGJldHdlZW4gdGhlIHN0cmVuZ3RoIG9mIGNvbnRyb2wgcG9saWNpZXMgb24gdGhpcyBpbmRleCBhbmQgdGhlIGFtb3VudCBvZiBhbGNvaG9sIHRoYXQgaXMgZHJ1bmsgYnkgcGVvcGxlIG9uIGF2ZXJhZ2UgaW4gZWFjaCBjb3VudHJ5LiBJbiBvcmRlciB0byBkZXZlbG9wIHRoZSBhbGNvaG9sIGNvbnRyb2wgaW5kZXgsIHRoZSByZXNlYXJjaGVycyBjaG9zZSBmaXZlIG1haW4gYXJlYXMgcmVsYXRpbmcgdG8gYWxjb2hvbCBjb250cm9sLiBUaGVzZSBmaXZlIGFyZWFzIHJlbGF0ZWQgdG8gdGhlIGF2YWlsYWJpbGl0eSBvZiBhbGNvaG9sLCB0aGUg4oCcZHJpbmtpbmcgY29udGV4dCzigJ0gcHJpY2luZywgYWR2ZXJ0aXNpbmcsIGFuZCB2ZWhpY2xlcy4gV2l0aGluIGVhY2ggcG9saWN5IGFyZWEsIHNwZWNpZmljIHBvbGljeSB0b3BpY3MgcmVsYXRpbmcgdG8gcHJldmVudGlvbiBvZiBhbGNvaG9sIGNvbnN1bXB0aW9uIGFuZCBoYXJtIHdlcmUgaWRlbnRpZmllZC4gVGhlbiwgZWFjaCBvZiAzMCBjb3VudHJpZXMgd2l0aGluIHRoZSBPRUNEIChPcmdhbml6YXRpb24gZm9yIEVjb25vbWljIENvb3BlcmF0aW9uIGFuZCBEZXZlbG9wbWVudCkgd2VyZSByYXRlZCBvbiB0aGlzIGluZGV4IHVzaW5nIHJlY2VudCBkYXRhIGZyb20gcHVibGljIHJlcG9ydHMgYW5kIGRhdGFiYXNlcy4gVGhlIHJlc2VhcmNoZXJzIGFsc28gY29sbGVjdGVkIGRhdGEgb24gYWxjb2hvbCBjb25zdW1wdGlvbiB3aXRoaW4gZWFjaCBjb3VudHJ5IGZyb20gdGhlIFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24gYW5kIHVzZWQgdGhpcyB0byBlc3RpbWF0ZSB0aGUgYXZlcmFnZSBhbW91bnQgZHJ1bmsgcGVyIHBlcnNvbiBpbiBhIHllYXIuIFdoZW4gdGhlIHJlc2VhcmNoZXJzIHBsb3R0ZWQgc2NvcmVzIG9uIHRoZWlyIGluZGV4IGFnYWluc3QgdGhlIGF2ZXJhZ2UgYW1vdW50IGRydW5rIHBlciBwZXJzb24gcGVyIHllYXIsIHRoZXkgc2F3IGEgbmVnYXRpdmUgY29ycmVsYXRpb24uIFRoYXQgaXMsIHRoZSBzdHJvbmdlciB0aGUgYWxjb2hvbCBjb250cm9sIHBvbGljeSBpbiBhbnkgZ2l2ZW4gY291bnRyeSwgdGhlIGxlc3MgcGVvcGxlIHNlZW1lZCB0byBkcmluay4gVGhpcyB3b3JrZWQgb3V0IGF0IGFyb3VuZCByb3VnaGx5IGEgMTAtcG9pbnQgaW5jcmVhc2Ugb24gdGhlIGluZGV4IGVxdWF0aW5nIHRvIGEgb25lLWxpdGVyIGRyb3AgaW4gYWxjb2hvbCBjb25zdW1wdGlvbiBwZXIgcGVyc29uIHBlciB5ZWFyLiBIb3dldmVyLCBzb21lIGNvdW50cmllcyBkaWQgbm90IHNlZW0gdG8gZml0IHRoZXNlIHByZWRpY3Rpb25zIHZlcnkgd2VsbC4gV2hhdCBEbyBUaGVzZSBGaW5kaW5ncyBNZWFuPzogVGhlIGZpbmRpbmcgdGhhdCB0aGVyZSBpcyBhIGxpbmsgYmV0d2VlbiB0aGUgc3RyZW5ndGggb2YgYWxjb2hvbCBjb250cm9sIHBvbGljaWVzIGFuZCBhbW91bnQgb2YgYWxjb2hvbCBkcmlua2luZyBkb2VzIG5vdCBuZWNlc3NhcmlseSBtZWFuIHRoYXQgZ3JlYXRlciBnb3Zlcm5tZW50IGNvbnRyb2wgY2F1c2VzIGxvd2VyIGRyaW5raW5nIHJhdGVzLiBUaGUgcmVsYXRpb25zaGlwIG1pZ2h0IGp1c3QgbWVhbiB0aGF0IHNvbWUgb3RoZXIgdmFyaWFibGUgKGUuZy4sIHNvbWUgY3VsdHVyYWwgZmFjdG9yKSBwbGF5cyBhIHJvbGUgaW4gZGV0ZXJtaW5pbmcgdGhlIGFtb3VudCB0aGF0IHBlb3BsZSBkcmluayBhcyB3ZWxsIGFzIGFmZmVjdGluZyBuYXRpb25hbCBwb2xpY2llcyBmb3IgYWxjb2hvbCBjb250cm9sLiBIb3dldmVyLCB0aGUgaW5kZXggZGV2ZWxvcGVkIGhlcmUgaXMgYSB1c2VmdWwgbWV0aG9kIGZvciByZXNlYXJjaGVycyBhbmQgcG9saWN5IG1ha2VycyB0byBtZWFzdXJlIGNoYW5nZXMgaW4gYWxjb2hvbCBjb250cm9scyBhbmQgdGhlcmVmb3JlIHVuZGVyc3RhbmQgbW9yZSBjbGVhcmx5IHRoZSBmYWN0b3JzIHRoYXQgYWZmZWN0IGRyaW5raW5nIHJhdGVzLiBUaGlzIHN0dWR5IGxvb2tlZCBvbmx5IGF0IHRoZSBjb25uZWN0aW9uIGJldHdlZW4gY29udHJvbCBtZWFzdXJlcyBhbmQgZXh0ZW50IG9mIGFsY29ob2wgY29uc3VtcHRpb24sIGFuZCBkaWQgbm90IGV4YW1pbmUgYWxjb2hvbC1yZWxhdGVkIGhhcm0uIEZ1dHVyZSByZXNlYXJjaCBtaWdodCBmb2N1cyBvbiB0aGUgbGlua3MgYmV0d2VlbiBjb250cm9scyBhbmQgdGhlIGhhcm1zIGNhdXNlZCBieSBhbGNvaG9sLiBBZGRpdGlvbmFsIEluZm9ybWF0aW9uLjogUGxlYXNlIGFjY2VzcyB0aGVzZSBXZWIgc2l0ZXMgdmlhIHRoZSBvbmxpbmUgdmVyc2lvbiBvZiB0aGlzIHN1bW1hcnkgYXQgaHR0cDovL2R4LmRvaS5vcmcvMTAuMTM3MS9qb3VybmFsLnBtZWQuMDA0MDE1MS4gIl0sInRpdGxlX2Rpc3BsYXkiOiJDb21wYXJhdGl2ZSBBbmFseXNpcyBvZiBBbGNvaG9sIENvbnRyb2wgUG9saWNpZXMgaW4gMzAgQ291bnRyaWVzIiwic2NvcmUiOjQuNjg2NjJ9LHsiaWQiOiIxMC4xMzcxL2pvdXJuYWwucG9uZS4wMTc5NDY5Iiwiam91cm5hbCI6IlBMT1MgT05FIiwiZWlzc24iOiIxOTMyLTYyMDMiLCJwdWJsaWNhdGlvbl9kYXRlIjoiMjAxNy0wNi0xNFQwMDowMDowMFoiLCJhcnRpY2xlX3R5cGUiOiJSZXNlYXJjaCBBcnRpY2xlIiwiYXV0aG9yX2Rpc3BsYXkiOlsiWGlhb21lbmcgUWlhbyIsIkZhbmd5dWFuIFlpbiIsIll1YW55dWFuIEppIiwiWXVueGlhbyBMaSIsIlBlbmcgWWFuIiwiSmlhbmdodWEgTGFpIl0sImFic3RyYWN0IjpbIlxuUmVjZW50IHN0dWRpZXMgaGF2ZSBpbmRpY2F0ZWQgdGhhdCBETkEgbWV0aHlsYXRpb24gcGxheXMgYW4gaW1wb3J0YW50IHJvbGUgaW4gdGhlIGRldmVsb3BtZW50IG9mIGFsY29ob2wgYWJ1c2UuIDUtQXphLTLigJktZGVveHljeXRpZGluZSAoNS1BemEtZGMpLCBhbiBpbmhpYml0b3Igb2YgRE5BIG1ldGh5bHRyYW5zZmVyYXNlcywgd2FzIEZEQSBhcHByb3ZlZCBmb3IgbXllbG9keXNwbGFzdGljIHN5bmRyb21lIHRyZWF0bWVudC4gSG93ZXZlciwgaXQgaXMgdW5jbGVhciB3aGV0aGVyIDUtQXphLWRjIGlzIGludm9sdmVkIGluIGFsY29ob2wgYWJ1c2UuIEluIHRoaXMgc3R1ZHksIHVzaW5nIGEgY2hyb25pYyBhbGNvaG9sIGV4cG9zdXJlIG1vZGVsIGluIHJhdHMsIDUtQXphLWRjIHdhcyBpbmplY3RlZCBpbnRvIHRoZSBtZWRpYWwgcHJlZnJvbnRhbCBjb3J0ZXggKG1QRkMpLiBBbGNvaG9sLWRyaW5raW5nIGJlaGF2aW9yIGFuZCB0aGUgYW54aWV0eSByZWxhdGVkIGJlaGF2aW9yIHdlcmUgZXZhbHVhdGVkIGJ5IHR3by1ib3R0bGUgY2hvaWNlIGFuZCBvcGVuIGZpZWxkIHRlc3QuIFdlIGZvdW5kIHRoYXQgNS1BemEtZGMgaW5qZWN0aW9uIGludG8gdGhlIG1QRkMgc2lnbmlmaWNhbnRseSBkZWNyZWFzZWQgYWxjb2hvbCBjb25zdW1wdGlvbiBhbmQgYWxjb2hvbCBwcmVmZXJlbmNlIGluIGFsY29ob2wtZXhwb3N1cmUgcmF0cywgY29ycmVzcG9uZGluZyB0byB0aGUgcmVkdWNlZCBibG9vZCBhbGNvaG9sIGxldmVscy4gQWx0aG91Z2ggNS1BemEtZGMgcG90ZW50aWF0ZWQgdGhlIGFueGlldHktbGlrZSBiZWhhdmlvciBvZiBhbGNvaG9sLWV4cG9zdXJlIHJhdHMsIGl0IGhhZCBubyBlZmZlY3Qgb24gdGhlIGxvY29tb3RvciBhY3Rpdml0eS4gTW9yZW92ZXIsIGJvdGggb2YgdGhlIG1STkEgYW5kIHByb3RlaW4gbGV2ZWxzIG9mIEROQSBNZXRoeWx0cmFuc2ZlcmFzZSAzQSAoRE5NVDNBKSBhbmQgRE5NVDNCIGluIHRoZSBtUEZDIHdlcmUgdXByZWd1bGF0ZWQgYWZ0ZXIgMzUgZGF5cyBvZiBhbGNvaG9sIGV4cG9zdXJlIGFuZCB0aGlzIHVwcmVndWxhdGlvbiBjb3VsZCBiZSByZXZlcnNlZCBieSA1LUF6YS1kYyB0cmVhdG1lbnQuIEFkZGl0aW9uYWxseSwgNS1BemEtZGMgcmV2ZXJzZWQgdGhlIGFsY29ob2wtaW5kdWNlZCBkb3ducmVndWxhdGlvbiBvZiBuZXVyb3Ryb3BoaW4tMyAoTnRmMyksIGNvcnJlc3BvbmRpbmdseSB0aGUgZXhwcmVzc2lvbiBvZiBpdHMgcmVjZXB0b3ItVHJrQyB3YXMgcmVkdWNlZC4gVGhlc2UgZmluZGluZ3MgaWRlbnRpZmllZCBhIGZ1bmN0aW9uYWwgcm9sZSBvZiA1LUF6YS1kYyBpbiBhbGNvaG9sLXJlbGF0ZWQgYmVoYXZpb3JhbCBwaGVub3R5cGVzIGFuZCBvbmUgb2YgdGhlIHBvdGVudGlhbCB0YXJnZXQgZ2VuZXMsIE50ZjMuIFdlIGFsc28gcHJvdmlkZSBub3ZlbCBldmlkZW5jZSBmb3IgRE5BIG1ldGh5bHRyYW5zZmVyYXNlcyBhcyBwb3RlbnRpYWwgdGhlcmFwZXV0aWMgdGFyZ2V0cyBpbiBhbGNvaG9sIGFidXNlLlxuIl0sInRpdGxlX2Rpc3BsYXkiOiI1LUF6YS0y4oCZLWRlb3h5Y3l0aWRpbmUgaW4gdGhlIG1lZGlhbCBwcmVmcm9udGFsIGNvcnRleCByZWd1bGF0ZXMgYWxjb2hvbC1yZWxhdGVkIGJlaGF2aW9yIGFuZCBOdGYzLVRya0MgZXhwcmVzc2lvbiBpbiByYXRzIiwic2NvcmUiOjQuNjg2MDk5fSx7ImlkIjoiMTAuMTM3MS9qb3VybmFsLnBvbmUuMDEzODAyMSIsImpvdXJuYWwiOiJQTE9TIE9ORSIsImVpc3NuIjoiMTkzMi02MjAzIiwicHVibGljYXRpb25fZGF0ZSI6IjIwMTUtMDktMTZUMDA6MDA6MDBaIiwiYXJ0aWNsZV90eXBlIjoiUmVzZWFyY2ggQXJ0aWNsZSIsImF1dGhvcl9kaXNwbGF5IjpbIlBhdmVsIEdyaWdvcmlldiIsIkV2Z2VueSBNLiBBbmRyZWV2Il0sImFic3RyYWN0IjpbIkJhY2tncm91bmQgYW5kIEFpbTogSGFybWZ1bCBhbGNvaG9sIGNvbnN1bXB0aW9uIGhhcyBsb25nIGJlZW4gcmVjb2duaXplZCBhcyBiZWluZyB0aGUgbWFqb3IgZGV0ZXJtaW5hbnQgb2YgbWFsZSBwcmVtYXR1cmUgbW9ydGFsaXR5IGluIHRoZSBFdXJvcGVhbiBjb3VudHJpZXMgb2YgdGhlIGZvcm1lciBVU1NSLiBPdXIgZm9jdXMgaGVyZSBpcyBvbiBCZWxhcnVzIGFuZCBSdXNzaWEsIHR3byBTbGF2aWMgY291bnRyaWVzIHdoaWNoIGNvbnRpbnVlIHRvIHN1ZmZlciBlbm9ybW91c2x5IGZyb20gdGhlIGJ1cmRlbiBvZiB0aGUgaGFybWZ1bCBjb25zdW1wdGlvbiBvZiBhbGNvaG9sLiBIb3dldmVyLCBhZnRlciBhIGxvbmcgcGVyaW9kIG9mIGRldGVyaW9yYXRpb24sIG1vcnRhbGl0eSB0cmVuZHMgaW4gdGhlc2UgY291bnRyaWVzIGhhdmUgYmVlbiBpbXByb3Zpbmcgb3ZlciB0aGUgcGFzdCBkZWNhZGUuIFdlIGFpbSB0byBpbnZlc3RpZ2F0ZSB0byB3aGF0IGV4dGVudCB0aGUgcmVjZW50IGRlY2xpbmVzIGluIGFkdWx0IG1vcnRhbGl0eSBpbiBCZWxhcnVzIGFuZCBSdXNzaWEgYXJlIGF0dHJpYnV0YWJsZSB0byB0aGUgYW50aS1hbGNvaG9sIG1lYXN1cmVzIGludHJvZHVjZWQgaW4gdGhlc2UgdHdvIGNvdW50cmllcyBpbiB0aGUgMjAwMHMuIERhdGEgYW5kIE1ldGhvZHM6IFdlIHJlbHkgb24gdGhlIGRldGFpbGVkIGNhdXNlLXNwZWNpZmljIG1vcnRhbGl0eSBzZXJpZXMgZm9yIHRoZSBwZXJpb2QgMTk4MOKAkzIwMTMuIE91ciBhbmFseXNpcyBmb2N1c2VzIG9uIHRoZSBtYWxlIHBvcHVsYXRpb24sIGFuZCBjb25zaWRlcnMgb25seSBhIGxpbWl0ZWQgbnVtYmVyIG9mIGNhdXNlcyBvZiBkZWF0aCB3aGljaCB3ZSBsYWJlbCBhcyBiZWluZyBhbGNvaG9sLXJlbGF0ZWQ6IGFjY2lkZW50YWwgcG9pc29uaW5nIGJ5IGFsY29ob2wsIGxpdmVyIGNpcnJob3NpcywgaXNjaGVtaWMgaGVhcnQgZGlzZWFzZXMsIHN0cm9rZSwgdHJhbnNwb3J0YXRpb24gYWNjaWRlbnRzLCBhbmQgb3RoZXIgZXh0ZXJuYWwgY2F1c2VzLiBGb3IgZWFjaCBvZiB0aGVzZSBjYXVzZXMgd2UgY29tcHV0ZWQgYWdlLXN0YW5kYXJkaXplZCBkZWF0aCByYXRlcy4gVGhlIGxpZmUgdGFibGUgZGVjb21wb3NpdGlvbiBtZXRob2Qgd2FzIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSBhZ2UgZ3JvdXBzIGFuZCB0aGUgY2F1c2VzIG9mIGRlYXRoIHJlc3BvbnNpYmxlIGZvciBjaGFuZ2VzIGluIGxpZmUgZXhwZWN0YW5jeSBvdmVyIHRpbWUuIENvbmNsdXNpb246IE91ciByZXN1bHRzIGRvIG5vdCBsZWFkIHVzIHRvIGNvbmNsdWRlIHRoYXQgdGhlIHNjaGVkdWxlIG9mIGFudGktYWxjb2hvbCBtZWFzdXJlcyBjb3JyZXNwb25kcyB0byB0aGUgc2NoZWR1bGUgb2YgbW9ydGFsaXR5IGNoYW5nZXMuIFRoZSBjb250aW51b3VzIHJlZHVjdGlvbiBpbiBhZHVsdCBtYWxlIG1vcnRhbGl0eSBzZWVuIGluIEJlbGFydXMgYW5kIFJ1c3NpYSBjYW5ub3QgYmUgZnVsbHkgZXhwbGFpbmVkIGJ5IHRoZSBhbnRpLWFsY29ob2wgcG9saWNpZXMgaW1wbGVtZW50ZWQgaW4gdGhlc2UgY291bnRyaWVzLCBhbHRob3VnaCB0aGVzZSBwb2xpY2llcyBsaWtlbHkgY29udHJpYnV0ZWQgdG8gdGhlIGxhcmdlIG1vcnRhbGl0eSByZWR1Y3Rpb25zIG9ic2VydmVkIGluIEJlbGFydXMgYW5kIFJ1c3NpYSBpbiAyMDA14oCTMjAwNiBhbmQgaW4gQmVsYXJ1cyBpbiAyMDEyLiBUaHVzLCB0aGUgZWZmZWN0cyBvZiB0aGVzZSBwb2xpY2llcyBhcHBlYXIgdG8gaGF2ZSBiZWVuIG1vZGVzdC4gV2UgYXJndWUgdGhhdCB0aGUgYW50aS1hbGNvaG9sIG1lYXN1cmVzIGltcGxlbWVudGVkIGluIEJlbGFydXMgYW5kIFJ1c3NpYSBzaW1wbHkgY29pbmNpZGVkIHdpdGggZmx1Y3R1YXRpb25zIGluIGFsY29ob2wtcmVsYXRlZCBtb3J0YWxpdHkgd2hpY2ggb3JpZ2luYXRlZCBpbiB0aGUgcGFzdC4gSWYgdGhlc2UgdHJlbmRzIGhhZCBub3QgYmVlbiB1bmRlcndheSBhbHJlYWR5LCB0aGVzZSBodWdlIG1vcnRhbGl0eSBlZmZlY3RzIHdvdWxkIG5vdCBoYXZlIG9jY3VycmVkLiAiXSwidGl0bGVfZGlzcGxheSI6IlRoZSBIdWdlIFJlZHVjdGlvbiBpbiBBZHVsdCBNYWxlIE1vcnRhbGl0eSBpbiBCZWxhcnVzIGFuZCBSdXNzaWE6IElzIEl0IEF0dHJpYnV0YWJsZSB0byBBbnRpLUFsY29ob2wgTWVhc3VyZXM/Iiwic2NvcmUiOjQuNjg1Mzc3fSx7ImlkIjoiMTAuMTM3MS9qb3VybmFsLnBvbmUuMDE5NDQ3OCIsImpvdXJuYWwiOiJQTE9TIE9ORSIsImVpc3NuIjoiMTkzMi02MjAzIiwicHVibGljYXRpb25fZGF0ZSI6IjIwMTgtMDMtMjJUMDA6MDA6MDBaIiwiYXJ0aWNsZV90eXBlIjoiUmVzZWFyY2ggQXJ0aWNsZSIsImF1dGhvcl9kaXNwbGF5IjpbIlNlcmdpIFRyaWFzLUxsaW3Ds3MiLCJQZWtrYSBNYXJ0aWthaW5lbiIsIlBpYSBNw6RrZWzDpCIsIkZhbm55IEphbnNzZW4iXSwiYWJzdHJhY3QiOlsiQmFja2dyb3VuZDogQWNjdXJhdGUgZXN0aW1hdGVzIG9mIHRoZSBpbXBhY3Qgb2YgYWxjb2hvbCBvbiBvdmVyYWxsIGFuZCBhZ2Utc3BlY2lmaWMgbW9ydGFsaXR5IGFyZSBjcnVjaWFsIGZvciBmb3JtdWxhdGluZyBoZWFsdGggcG9saWNpZXMuIEhvd2V2ZXIsIGRpZmZlcmVudCBhcHByb2FjaGVzIHRvIGVzdGltYXRpbmcgYWxjb2hvbC1hdHRyaWJ1dGFibGUgbW9ydGFsaXR5IHByb3ZpZGUgZGlmZmVyZW50IHJlc3VsdHMsIGFuZCBhIGRldGFpbGVkIGNvbXBhcmlzb24gb2YgYWdlLXNwZWNpZmljIGVzdGltYXRlcyBpcyBtaXNzaW5nLiBNZXRob2RzOiBVc2luZyBkYXRhIG9uIGNhdXNlIG9mIGRlYXRoLCBhbGNvaG9sIGNvbnN1bXB0aW9uLCBhbmQgcmVsYXRpdmUgcmlza3Mgb2YgbW9ydGFsaXR5IGF0IGRpZmZlcmVudCBjb25zdW1wdGlvbiBsZXZlbHMsIHdlIGNvbXBhcmUgZWlnaHQgZXN0aW1hdGVzIG9mIHNleC0gYW5kIGFnZS1zcGVjaWZpYyBhbGNvaG9sLWF0dHJpYnV0YWJsZSBtb3J0YWxpdHkgaW4gRnJhbmNlICgyMDEwKSBhbmQgRmlubGFuZCAoMjAxMyk6IGZpdmUgZXN0aW1hdGVzIHVzaW5nIGNhdXNlLW9mLWRlYXRoIGFwcHJvYWNoZXMgKHdpdGggb25lIGFjY291bnRpbmcgZm9yIGNvbnRyaWJ1dG9yeSBjYXVzZXMpLCBhbmQgdGhyZWUgZXN0aW1hdGVzIHVzaW5nIGF0dHJpYnV0YWJsZSBmcmFjdGlvbiAoQUYpIGFwcHJvYWNoZXMuIFJlc3VsdHM6IEFGLXJlbGF0ZWQgYXBwcm9hY2hlcyBhbmQgdGhlIGFwcHJvYWNoIGJhc2VkIG9uIGFsY29ob2wtcmVsYXRlZCB1bmRlcmx5aW5nIGFuZCBjb250cmlidXRvcnkgY2F1c2VzIG9mIGRlYXRoIHByb3ZpZGVkIGVzdGltYXRlcyBvZiBhbGNvaG9sLWF0dHJpYnV0YWJsZSBtb3J0YWxpdHkgdGhhdCB3ZXJlIHR3aWNlIGFzIGhpZ2ggYXMgdGhlIGVzdGltYXRlcyBmb3VuZCB1c2luZyB1bmRlcmx5aW5nIGNhdXNlLW9mLWRlYXRoIGFwcHJvYWNoZXMgaW4gYm90aCBjb3VudHJpZXMgYW5kIHNleGVzLiBUaGUgZGlmZmVyZW5jZXMgYWNyb3NzIHRoZSBtZXRob2RzIHdlcmUgZ3JlYXRlc3QgYW1vbmcgb2xkZXIgYWdlIGdyb3VwcyBBbiBpbnZlcnNlIFUtc2hhcGUgaW4gYWdlLXNwZWNpZmljIGFsY29ob2wtYXR0cmlidXRhYmxlIG1vcnRhbGl0eSAocGVha2luZyBhdCBhcm91bmQgYWdlIDY1KSB3YXMgb2JzZXJ2ZWQgZm9yIGNhdXNlLW9mLWRlYXRoIGFwcHJvYWNoZXMsIHdpdGggdGhpcyBzaGFwZSBiZWluZyBtb3JlIHByb25vdW5jZWQgaW4gRmlubGFuZC4gQUYtcmVsYXRlZCBhcHByb2FjaGVzIHJlc3VsdGVkIGluIGRpZmZlcmVudCBlc3RpbWF0ZXMgYXQgb2xkZXIgYWdlczogaS5lLiwgbW9ydGFsaXR5IHdhcyBmb3VuZCB0byBpbmNyZWFzZSB3aXRoIGFnZSBpbiBGcmFuY2U7IHdoZXJlYXMgaW4gRmlubGFuZCBtb3J0YWxpdHkgZXN0aW1hdGVzIGRlcGVuZGVkIG9uIHRoZSB1bmRlcmx5aW5nIGFzc3VtcHRpb25zIHJlZ2FyZGluZyB0aGUgZWZmZWN0cyBvZiBhbGNvaG9sIGNvbnN1bXB0aW9uIG9uIGNhcmRpb3Zhc2N1bGFyIG1vcnRhbGl0eS4gQ29uY2x1c2lvbnM6IFdoaWxlIHRoZSBtb3N0IGRldGFpbGVkIGFwcHJvYWNoZXMgKGkuZS4sIHRoZSBBRi1yZWxhdGVkIGFwcHJvYWNoIGFuZCB0aGUgYXBwcm9hY2ggdGhhdCBpbmNsdWRlcyB1bmRlcmx5aW5nIGFuZCBjb250cmlidXRvcnkgY2F1c2VzKSBhcmUgdGhlb3JldGljYWxseSBhYmxlIHRvIHByb3ZpZGUgbW9yZSBhY2N1cmF0ZSBlc3RpbWF0ZXMgb2YgYWxjb2hvbC1hdHRyaWJ1dGFibGUgbW9ydGFsaXR5LCB0aGV54oCTZXNwZWNpYWxseSB0aGUgQUYgYXBwcm9hY2hlcy0gZGVwZW5kIGhlYXZpbHkgb24gZGF0YSBhdmFpbGFiaWxpdHkgYW5kIHF1YWxpdHkuIFRvIGVuaGFuY2UgdGhlIHJlbGlhYmlsaXR5IG9mIGFsY29ob2wtYXR0cmlidXRhYmxlIG1vcnRhbGl0eSBlc3RpbWF0ZXMsIGRhdGEgcXVhbGl0eSBmb3Igb2xkZXIgYWdlIGdyb3VwcyBuZWVkcyB0byBiZSBpbXByb3ZlZC4gIl0sInRpdGxlX2Rpc3BsYXkiOiJDb21wYXJpc29uIG9mIGRpZmZlcmVudCBhcHByb2FjaGVzIGZvciBlc3RpbWF0aW5nIGFnZS1zcGVjaWZpYyBhbGNvaG9sLWF0dHJpYnV0YWJsZSBtb3J0YWxpdHk6IFRoZSBjYXNlcyBvZiBGcmFuY2UgYW5kIEZpbmxhbmQiLCJzY29yZSI6NC42ODQ5NDY1fSx7ImlkIjoiMTAuMTM3MS9qb3VybmFsLnBvbmUuMDA4NjE5OSIsImpvdXJuYWwiOiJQTG9TIE9ORSIsImVpc3NuIjoiMTkzMi02MjAzIiwicHVibGljYXRpb25fZGF0ZSI6IjIwMTQtMDEtMjFUMDA6MDA6MDBaIiwiYXJ0aWNsZV90eXBlIjoiUmVzZWFyY2ggQXJ0aWNsZSIsImF1dGhvcl9kaXNwbGF5IjpbIklsc2UgQy4gU2Nocmlla3MiLCJBbm5ldHRlIFN0YWZsZXUiLCJWaWN0b3IgTC4gS2FsbGVuIiwiTWFyYyBHcm9vdGplbiIsIlJlbmdlciBGLiBXaXRrYW1wIiwiSGVuayBGLiBKLiBIZW5kcmlrcyJdLCJhYnN0cmFjdCI6WyJCYWNrZ3JvdW5kOiBUaGUgcHJlLWRyaW5raW5nIG1vb2Qgc3RhdGUgaGFzIGJlZW4gaW5kaWNhdGVkIHRvIGJlIGFuIGltcG9ydGFudCBmYWN0b3IgaW4gdGhlIG1vb2QgZWZmZWN0cyBvZiBhbGNvaG9sLiBIb3dldmVyLCBmb3IgbW9kZXJhdGUgYWxjb2hvbCBjb25zdW1wdGlvbiB0aGVyZSBhcmUgbm8gY29udHJvbGxlZCBzdHVkaWVzIHNob3dpbmcgdGhpcyBhc3NvY2lhdGlvbi4gQWxzbywgdGhlIG1vb2QgZWZmZWN0cyBvZiBjb25zdW1pbmcgYWxjb2hvbCBjb21iaW5lZCB3aXRoIGZvb2QgYXJlIGxhcmdlbHkgdW5rbm93bi4gVGhlIGFpbSBvZiB0aGlzIHN0dWR5IHdhcyB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0cyBvZiBtb2RlcmF0ZSBhbGNvaG9sIGNvbWJpbmVkIHdpdGggYSBtZWFsIG9uIGFtYmlhbmNlLWluZHVjZWQgbW9vZCBzdGF0ZXMuIEZ1cnRoZXJtb3JlIGVmZmVjdHMgb24gYXV0b25vbWljIG5lcnZvdXMgc3lzdGVtIGFjdGl2aXR5IHdlcmUgbWVhc3VyZWQgdG8gZXhwbG9yZSBwaHlzaW9sb2dpY2FsIG1lY2hhbmlzbXMgdGhhdCBtYXkgYmUgaW52b2x2ZWQgaW4gY2hhbmdlcyBvZiBtb29kIHN0YXRlLiBNZXRob2RzOiBJbiBhIGNyb3Nzb3ZlciBkZXNpZ24gMjggd29tZW4gKGFnZSAxOOKAkzQ1IHksIEJNSSAxOC414oCTMjcga2cvbTIpIHdlcmUgcmFuZG9tbHkgYWxsb2NhdGVkIHRvIDQgY29uZGl0aW9ucyBpbiB3aGljaCB0aGV5IHJlY2VpdmVkIDMgZ2xhc3NlcyBvZiBzcGFya2xpbmcgd2hpdGUgd2luZSAoMzAgZyBhbGNvaG9sKSBvciBhbGNvaG9sLWZyZWUgc3BhcmtsaW5nIHdoaXRlIHdpbmUgd2hpbGUgaGF2aW5nIGRpbm5lciBpbiBhIHJvb20gd2l0aCBlaXRoZXIgYSBwbGVhc2FudCBvciB1bnBsZWFzYW50IGNyZWF0ZWQgYW1iaWFuY2UuIFN1YmplY3RzIGZpbGxlZCBvdXQgcXVlc3Rpb25uYWlyZXMgKEItQkFFUywgUE9NUyBhbmQgcG9zdHByYW5kaWFsIHdlbGxuZXNzIHF1ZXN0aW9ubmFpcmUpIGF0IGRpZmZlcmVudCB0aW1lcy4gU2tpbiBjb25kdWN0YW5jZSBhbmQgaGVhcnQgcmF0ZSB2YXJpYWJpbGl0eSB3ZXJlIG1lYXN1cmVkIGNvbnRpbnVvdXNseS4gUmVzdWx0czogTW9kZXJhdGUgYWxjb2hvbCBjb25zdW1wdGlvbiBpbmNyZWFzZWQgaGFwcGluZXNzIHNjb3JlcyBpbiB0aGUgdW5wbGVhc2FudCwgYnV0IG5vdCBpbiB0aGUgcGxlYXNhbnQgYW1iaWFuY2UuIEFsY29ob2wgY29uc3VtcHRpb24gaW5jcmVhc2VkIGhhcHBpbmVzcyBhbmQgc3RpbXVsYXRpb24gZmVlbGluZ3Mgd2l0aGluIDEgaG91ciBhbmQgaW5jcmVhc2VkIHNlZGF0aXZlIGZlZWxpbmdzIGFuZCBzbGVlcGluZXNzIGZvciAyLjUgaG91ci4gU2tpbiBjb25kdWN0YW5jZSB3YXMgaW5jcmVhc2VkIGFmdGVyIGFsY29ob2wgd2l0aGluIDEgaG91ciBhbmQgd2FzIHJlbGF0ZWQgdG8gaGFwcGluZXNzIGFuZCBzdGltdWxhdGlvbiBzY29yZXMuIEhlYXJ0IHJhdGUgdmFyaWFiaWxpdHkgd2FzIGRlY3JlYXNlZCBhZnRlciBhbGNvaG9sIGZvciAyIGhvdXJzIGFuZCB3YXMgcmVsYXRlZCB0byBtZW50YWwgYWxlcnRuZXNzLiBDb25jbHVzaW9uOiBNb29kIGluZHVjdGlvbnMgYW5kIGF1dG9ub21pYyBuZXJ2b3VzIHN5c3RlbSBwYXJhbWV0ZXJzIG1heSBiZSB1c2VmdWwgdG8gZXZhbHVhdGUgbW9vZCBjaGFuZ2VzIGJ5IG51dHJpdGlvbmFsIGludGVydmVudGlvbnMuIE1vZGVyYXRlIGFsY29ob2wgY29uc3VtcHRpb24gZWxldmF0ZXMgaGFwcGluZXNzIHNjb3JlcyBpbiBhbiB1bnBsZWFzYW50IGFtYmlhbmNlLiBIb3dldmVyLCBkcmlua2luZyBhbGNvaG9sIGR1cmluZyBhIHBsZWFzYW50IG1vb2QgcmVzdWx0cyBpbiBhbiBlcXVhbGx5IHBvc2l0aXZlIG1vb2Qgc3RhdGUuIFRyaWFsIFJlZ2lzdHJhdGlvbjogQ2xpbmljYWx0cmlhbHMuZ292IE5DVDAxNDI2MDIyLiAiXSwidGl0bGVfZGlzcGxheSI6IlRoZSBCaXBoYXNpYyBFZmZlY3RzIG9mIE1vZGVyYXRlIEFsY29ob2wgQ29uc3VtcHRpb24gd2l0aCBhIE1lYWwgb24gQW1iaWFuY2UtSW5kdWNlZCBNb29kIGFuZCBBdXRvbm9taWMgTmVydm91cyBTeXN0ZW0gQmFsYW5jZTogQSBSYW5kb21pemVkIENyb3Nzb3ZlciBUcmlhbCIsInNjb3JlIjo0LjY4NDgzN30seyJpZCI6IjEwLjEzNzEvam91cm5hbC5wbWVkLjAwNTAxMDQiLCJqb3VybmFsIjoiUExvUyBNZWRpY2luZSIsImVpc3NuIjoiMTU0OS0xNjc2IiwicHVibGljYXRpb25fZGF0ZSI6IjIwMDgtMDUtMTNUMDA6MDA6MDBaIiwiYXJ0aWNsZV90eXBlIjoiUmVzZWFyY2ggQXJ0aWNsZSIsImF1dGhvcl9kaXNwbGF5IjpbIkpvZWwgRyBSYXkiLCJSYWhpbSBNb2luZWRkaW4iLCJDaGFpbSBNIEJlbGwiLCJEZXZhIFRoaXJ1Y2hlbHZhbSIsIk1hcmlhIElzYWJlbGxhIENyZWF0b3JlIiwiUGlvdHIgR296ZHlyYSIsIk1pY2hhZWwgQ3VzaW1hbm8iLCJEb25hbGQgQSBSZWRlbG1laWVyIl0sImFic3RyYWN0IjpbIkJhY2tncm91bmQ6IEFsY29ob2wgaXMgYSBjb250cmlidXRpbmcgY2F1c2Ugb2YgdW5pbnRlbnRpb25hbCBpbmp1cmllcywgc3VjaCBhcyBtb3RvciB2ZWhpY2xlIGNyYXNoZXMuIFByaW9yIHJlc2VhcmNoIG9uIHRoZSBhc3NvY2lhdGlvbiBiZXR3ZWVuIGFsY29ob2wgdXNlIGFuZCB2aW9sZW50IGluanVyeSB3YXMgbGltaXRlZCB0byBzdXJ2ZXktYmFzZWQgZGF0YSwgYW5kIHRoZSBpbmNsdXNpb24gb2YgY2FzZXMgZnJvbSBhIHNpbmdsZSB0cmF1bWEgY2VudHJlLCB3aXRob3V0IGFkZXF1YXRlIGNvbnRyb2xzLiBCZXlvbmQgdGhlc2UgbGltaXRhdGlvbnMgd2FzIHRoZSBpbmFiaWxpdHkgb2YgcHJpb3IgcmVzZWFyY2hlcnMgdG8gY29tcHJlaGVuc2l2ZWx5IGNhcHR1cmUgbW9zdCBhbGNvaG9sIHNhbGVzLiBJbiBPbnRhcmlvLCBtb3N0IGFsY29ob2wgaXMgc29sZCB0aHJvdWdoIHJldGFpbCBvdXRsZXRzIHJ1biBieSB0aGUgcHJvdmluY2lhbCBnb3Zlcm5tZW50LCBhbmQgaG9zcGl0YWxzIGFyZSBmaW5hbmNlZCB1bmRlciBhIHByb3ZpbmNpYWwgaGVhbHRoIGNhcmUgc3lzdGVtLiBXZSBhc3Nlc3NlZCB0aGUgcmlzayBvZiBiZWluZyBob3NwaXRhbGl6ZWQgZHVlIHRvIGFzc2F1bHQgaW4gYXNzb2NpYXRpb24gd2l0aCByZXRhaWwgYWxjb2hvbCBzYWxlcyBhY3Jvc3MgT250YXJpby4gTWV0aG9kcyBhbmQgRmluZGluZ3M6IFdlIHBlcmZvcm1lZCBhIHBvcHVsYXRpb24tYmFzZWQgY2FzZS1jcm9zc292ZXIgYW5hbHlzaXMgb2YgYWxsIHBlcnNvbnMgYWdlZCAxMyB5ZWFycyBhbmQgb2xkZXIgaG9zcGl0YWxpemVkIGZvciBhc3NhdWx0IGluIE9udGFyaW8gZnJvbSAxIEFwcmlsIDIwMDIgdG8gMSBEZWNlbWJlciAyMDA0LiBPbiB0aGUgZGF5IHByaW9yIHRvIGVhY2ggYXNzYXVsdCBjYXNlJ3MgaG9zcGl0YWxpemF0aW9uLCB0aGUgdm9sdW1lIG9mIGFsY29ob2wgc29sZCBhdCB0aGUgc3RvcmUgaW4gY2xvc2VzdCBwcm94aW1pdHkgdG8gdGhlIHZpY3RpbSdzIGhvbWUgd2FzIGNvbXBhcmVkIHRvIHRoZSB2b2x1bWUgb2YgYWxjb2hvbCBzb2xkIGF0IHRoZSBzYW1lIHN0b3JlIDcgZCBlYXJsaWVyLiBDb25kaXRpb25hbCBsb2dpc3RpYyByZWdyZXNzaW9uIGFuYWx5c2lzIHdhcyB1c2VkIHRvIGRldGVybWluZSB0aGUgYXNzb2NpYXRlZCByZWxhdGl2ZSByaXNrIChSUikgb2YgYXNzYXVsdCBwZXIgMSwwMDAgbCBoaWdoZXIgZGFpbHkgc2FsZXMgb2YgYWxjb2hvbC4gT2YgdGhlIDMsMjEyIHBlcnNvbnMgYWRtaXR0ZWQgdG8gaG9zcGl0YWwgZm9yIGFzc2F1bHQsIG5lYXJseSAyNSUgd2VyZSBiZXR3ZWVuIHRoZSBhZ2VzIG9mIDEzIGFuZCAyMCB5LCBhbmQgODMlIHdlcmUgbWFsZS4gQSB0b3RhbCBvZiAxLDE1MCBhc3NhdWx0cyAoMzYlKSBpbnZvbHZlZCB0aGUgdXNlIG9mIGEgc2hhcnAgb3IgYmx1bnQgd2VhcG9uLCBhbmQgMSw1MzIgKDQ4JSkgYXJvc2UgZHVyaW5nIGFuIHVuYXJtZWQgYnJhd2wgb3IgZmlnaHQuIEZvciBldmVyeSAxLDAwMCBsIG1vcmUgb2YgYWxjb2hvbCBzb2xkIHBlciBzdG9yZSBwZXIgZGF5LCB0aGUgcmVsYXRpdmUgcmlzayBvZiBiZWluZyBob3NwaXRhbGl6ZWQgZm9yIGFzc2F1bHQgd2FzIDEuMTMgKDk1JSBjb25maWRlbmNlIGludGVydmFsIFtDSV0gMS4wMuKAkzEuMjYpLiBUaGUgcmlzayB3YXMgYWNjZW50dWF0ZWQgZm9yIG1hbGVzICgxLjE4LCA5NSUgQ0kgMS4wNeKAkzEuMzMpLCB5b3V0aCBhZ2VkIDEzIHRvIDIwIHkgKDEuMjEsIDk1JSBDSSAwLjk54oCTMS40NiksIGFuZCB0aG9zZSBpbiB1cmJhbiBhcmVhcyAoMS4xOSwgOTUlIENJIDEuMDbigJMxLjM1KS4gQ29uY2x1c2lvbnM6IFRoZSByaXNrIG9mIGJlaW5nIGEgdmljdGltIG9mIHNlcmlvdXMgYXNzYXVsdCBpbmNyZWFzZXMgd2l0aCBhbGNvaG9sIHNhbGVzLCBlc3BlY2lhbGx5IGFtb25nIHlvdW5nIHVyYmFuIG1lbi4gQWtpbiB0byByZWR1Y2luZyB0aGUgcmlzayBvZiBkcml2aW5nIHdoaWxlIGltcGFpcmVkLCBjb25zaWRlcmF0aW9uIHNob3VsZCBiZSBnaXZlbiB0byBub3ZlbCBtZXRob2RzIG9mIHByZXZlbnRpbmcgYWxjb2hvbC1yZWxhdGVkIHZpb2xlbmNlLiBcbiAgICAgICAgSW4gYSBwb3B1bGF0aW9uLWJhc2VkIGNhc2UtY3Jvc3NvdmVyIGFuYWx5c2lzLCBKb2VsIFJheSBhbmQgY29sbGVhZ3VlcyBmaW5kIHRoYXQgdGhlIHJpc2sgb2YgYmVpbmcgYSB2aWN0aW0gb2Ygc2VyaW91cyBhc3NhdWx0IGluY3JlYXNlcyB3aXRoIHJldGFpbCBhbGNvaG9sIHNhbGVzLCBlc3BlY2lhbGx5IGFtb25nIHlvdW5nIHVyYmFuIG1lbi5cbiAgICAgIEJhY2tncm91bmQuOiBBbGNvaG9sIGhhcyBiZWVuIHByb2R1Y2VkIGFuZCBjb25zdW1lZCBhcm91bmQgdGhlIHdvcmxkIHNpbmNlIHByZWhpc3RvcmljIHRpbWVzLiBJbiB0aGUgV2VzdGVybiB3b3JsZCBpdCBpcyBub3cgdGhlIG1vc3QgY29tbW9ubHkgY29uc3VtZWQgcHN5Y2hvYWN0aXZlIGRydWcgKGEgc3Vic3RhbmNlIHRoYXQgY2hhbmdlcyBtb29kLCBiZWhhdmlvciwgYW5kIHRob3VnaHQgcHJvY2Vzc2VzKS4gVGhlIFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24gcmVwb3J0cyB0aGF0IHRoZXJlIGFyZSA3Ni4zIG1pbGxpb24gcGVyc29ucyB3aXRoIGFsY29ob2wgdXNlIGRpc29yZGVycyB3b3JsZHdpZGUuIEFsY29ob2wgY29uc3VtcHRpb24gaXMgYW4gaW1wb3J0YW50IGZhY3RvciBpbiB1bmludGVudGlvbmFsIGluanVyaWVzLCBzdWNoIGFzIG1vdG9yIHZlaGljbGUgY3Jhc2hlcywgYW5kIGluIHZpb2xlbnQgY3JpbWluYWwgYmVoYXZpb3IuIEluIHRoZSBVbml0ZWQgS2luZ2RvbSwgZm9yIGV4YW1wbGUsIGEgaGlnaGVyIHByb3BvcnRpb24gb2YgaGVhdnkgZHJpbmtlcnMgdGhhbiBsaWdodCBkcmlua2VycyBjYXVzZSB2aW9sZW50IGNyaW1pbmFsIG9mZmVuc2VzLiBPdGhlciBmaWd1cmVzIHN1Z2dlc3QgdGhhdCBwZW9wbGUgKGluIHBhcnRpY3VsYXIsIHlvdW5nIG1lbikgaGF2ZSBhbiBpbmNyZWFzZWQgcmlzayBvZiBjb21taXR0aW5nIGEgY3JpbWluYWxseSB2aW9sZW50IG9mZmVuc2Ugd2l0aGluIDI0IGggb2YgZHJpbmtpbmcgYWxjb2hvbC4gVGhlcmUgaXMgYWxzbyBzb21lIGV2aWRlbmNlIHRoYXQgc3VnZ2VzdHMgdGhhdCB0aGUgdmljdGltcyBhcyB3ZWxsIGFzIHRoZSBwZXJwZXRyYXRvcnMgb2YgYXNzYXVsdHMgaGF2ZSBvZnRlbiBiZWVuIGRyaW5raW5nIHJlY2VudGx5LCBwb3NzaWJseSBiZWNhdXNlIGFsY29ob2wgaW1wYWlycyB0aGUgdmljdGltJ3MgYWJpbGl0eSB0byBqdWRnZSBwb3RlbnRpYWxseSBleHBsb3NpdmUgc2l0dWF0aW9ucy4gV2h5IFdhcyBUaGlzIFN0dWR5IERvbmU/OiBUaGUgcmVzZWFyY2hlcnMgd2FudGVkIHRvIGtub3cgbW9yZSBhYm91dCB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gYWxjb2hvbCBhbmQgaW50ZW50aW9uYWwgdmlvbGVuY2UuIFRoZSByZWNvZ25pdGlvbiBvZiBhIGNsZWFyIGxpbmsgYmV0d2VlbiBkcml2aW5nIHdoZW4gaW1wYWlyZWQgYnkgYWxjb2hvbCBhbmQgbW90b3IgdmVoaWNsZSBjcmFzaGVzIGhhcyBsZWQgbWFueSBjb3VudHJpZXMgdG8gaW50cm9kdWNlIHB1YmxpYyBhd2FyZW5lc3MgcHJvZ3JhbXMgdGhhdCBzdGlnbWF0aXplIGRydW5rIGRyaXZpbmcuIElmIGEgY2xlYXIgbGluayBiZXR3ZWVuIGFsY29ob2wgY29uc3VtcHRpb24gYnkgdGhlIHBlb3BsZSBpbnZvbHZlZCBpbiB2aW9sZW50IGNyaW1lIGNvdWxkIGFsc28gYmUgZXN0YWJsaXNoZWQsIHNpbWlsYXIgcHJvZ3JhbXMgbWlnaHQgcmVkdWNlIGFsY29ob2wtcmVsYXRlZCBhc3NhdWx0cy4gVGhlIHJlc2VhcmNoZXJzIHRlc3RlZCB0aGUgaHlwb3RoZXNpcyB0aGF0IHRoZSByaXNrIG9mIGJlaW5nIGhvc3BpdGFsaXplZCBkdWUgdG8gYSB2aW9sZW50IGFzc2F1bHQgaW5jcmVhc2VzIHdoZW4gdGhlcmUgYXJlIGluY3JlYXNlZCBhbGNvaG9sIHNhbGVzIGluIHRoZSBpbW1lZGlhdGUgdmljaW5pdHkgb2YgdGhlIHZpY3RpbSdzIHBsYWNlIG9mIHJlc2lkZW5jZS4gV2hhdCBEaWQgdGhlIFJlc2VhcmNoZXJzIERvIGFuZCBGaW5kPzogVGhlIHJlc2VhcmNoZXJzIGRpZCB0aGVpciBzdHVkeSBpbiBPbnRhcmlvLCBDYW5hZGEgZm9yIHRocmVlIHJlYXNvbnMuIEZpcnN0LCBPbnRhcmlvIGlzIENhbmFkYSdzIGxhcmdlc3QgcHJvdmluY2UuIFNlY29uZCwgdGhlIHByb3ZpbmNlIGtlZXBzIGRldGFpbGVkIGNvbXB1dGVyaXplZCBtZWRpY2FsIHJlY29yZHMsIGluY2x1ZGluZyByZWNvcmRzIG9mIHBlb3BsZSBob3NwaXRhbGl6ZWQgZnJvbSBiZWluZyB2aW9sZW50bHkgYXNzYXVsdGVkLiBUaGlyZCwgbW9zdCBhbGNvaG9sIGlzIHNvbGQgaW4gZ292ZXJubWVudC1ydW4gc2hvcHMsIGFuZCB0aGUgZGlzdHJpY3QgaGFzIHRoZSBpbmZyYXN0cnVjdHVyZSB0byBhbGxvdyBkYWlseSBhbGNvaG9sIHNhbGVzIHRvIGJlIHRyYWNrZWQuIFRoZSByZXNlYXJjaGVycyBpZGVudGlmaWVkIG1vcmUgdGhhbiAzLDAwMCBwZW9wbGUgb3ZlciB0aGUgYWdlIG9mIDEzIHkgd2hvIHdlcmUgaG9zcGl0YWxpemVkIGluIHRoZSBwcm92aW5jZSBiZWNhdXNlIG9mIGEgc2VyaW91cyBhc3NhdWx0IGR1cmluZyBhIDMyLW1vIHBlcmlvZC4gVGhleSBjb21wYXJlZCB0aGUgdm9sdW1lIG9mIGFsY29ob2wgc29sZCBhdCB0aGUgbGlxdW9yIHN0b3JlIG5lYXJlc3QgdG8gdGhlIHZpY3RpbSdzIGhvbWUgdGhlIGRheSBiZWZvcmUgdGhlIGFzc2F1bHQgd2l0aCB0aGUgdm9sdW1lIHNvbGQgYXQgdGhlIHNhbWUgc3RvcmUgYSB3ZWVrIGVhcmxpZXIgKHRoaXMgdHlwZSBvZiBzdHVkeSBpcyBjYWxsZWQgYSDigJxjYXNlLWNyb3Nzb3ZlcuKAnSBzdHVkeSkuIEZvciBldmVyeSBleHRyYSAxLDAwMCBsIG9mIGFsY29ob2wgc29sZCBwZXIgc3RvcmUgcGVyIGRheSAoYSBkb3VibGluZyBvZiBhbGNvaG9sIHNhbGVzKSwgdGhlIG92ZXJhbGwgcmlzayBvZiBiZWluZyBob3NwaXRhbGl6ZWQgZm9yIGFzc2F1bHQgaW5jcmVhc2VkIGJ5IDEzJS4gVGhlIHJpc2sgd2FzIGhpZ2hlc3QgaW4gdGhyZWUgc3ViZ3JvdXBzIG9mIHBlb3BsZTogbWVuICgxOCUgaW5jcmVhc2VkIHJpc2spLCB5b3V0aHMgYWdlZCAxMyB0byAyMCB5ICgyMSUgaW5jcmVhc2VkIHJpc2spLCBhbmQgdGhvc2UgbGl2aW5nIGluIHVyYmFuIGFyZWFzICgxOSUgaW5jcmVhc2VkIHJpc2spLiBBdCBwZWFrIHRpbWVzIG9mIGFsY29ob2wgc2FsZXMsIHRoZSByaXNrIG9mIGFzc2F1bHQgd2FzIDQxJSBoaWdoZXIgdGhhbiBhdCB0aW1lcyB3aGVuIGFsY29ob2wgc2FsZXMgd2VyZSBsb3dlc3QuIFdoYXQgRG8gVGhlc2UgRmluZGluZ3MgTWVhbj86IFRoZXNlIGZpbmRpbmdzIGluZGljYXRlIHRoYXQgdGhlIHJpc2sgb2YgYmVpbmcgc2VyaW91c2x5IGFzc2F1bHRlZCBpbmNyZWFzZXMgd2l0aCB0aGUgYW1vdW50IG9mIGFsY29ob2wgc29sZCBsb2NhbGx5IHRoZSBkYXkgYmVmb3JlIHRoZSBhc3NhdWx0IGFuZCBzaG93IHRoYXQgdGhlIGluZGl2aWR1YWxzIG1vc3QgYXQgcmlzayBhcmUgeW91bmcgbWVuIGxpdmluZyBpbiB1cmJhbiBhcmVhcy4gQmVjYXVzZSB0aGUgc3R1ZHkgY29uc2lkZXJzIG9ubHkgc2VyaW91cyBhc3NhdWx0cyBhbmQgYWxjb2hvbCBzb2xkIGluIHNob3BzIChpLmUuLCBub3QgaW5jbHVkaW5nIGFsY29ob2wgc29sZCBpbiBiYXJzKSwgaXQgcHJvYmFibHkgdW5kZXJlc3RpbWF0ZXMgdGhlIGFzc29jaWF0aW9uIGJldHdlZW4gYWxjb2hvbCBhbmQgYXNzYXVsdC4gSXQgYWxzbyBkb2VzIG5vdCBpbmRpY2F0ZSB3aGV0aGVyIHRoZSB2aWN0aW0gb3IgcGVycGV0cmF0b3Igb2YgdGhlIGFzc2F1bHQgKG9yIGJvdGgpIGhhZCBiZWVuIGRyaW5raW5nLCBhbmQgaXRzIGZpbmRpbmdzIG1heSBub3QgYXBwbHkgdG8gY291bnRyaWVzIHdpdGggZGlmZmVyZW50IGRyaW5raW5nIGhhYml0cy4gTmV2ZXJ0aGVsZXNzLCB0aGVzZSBmaW5kaW5ncyBzdXBwb3J0IHRoZSBpZGVhIHRoYXQgdGhlIGNvbnN1bXB0aW9uIG9mIGFsY29ob2wgY29udHJpYnV0ZXMgdG8gdGhlIG9jY3VycmVuY2Ugb2YgbWVkaWNhbCBpbmp1cmllcyBmcm9tIGludGVudGlvbmFsIHZpb2xlbmNlLiBJbmNyZWFzaW5nIHRoZSBwcmljZSBvZiBhbGNvaG9sIG9yIG1ha2luZyBhbGNvaG9sIGhhcmRlciB0byBvYnRhaW4gbWlnaHQgaGVscCB0byByZWR1Y2UgdGhlIG9jY3VycmVuY2Ugb2YgYWxjb2hvbC1yZWxhdGVkIGFzc2F1bHRzLiBUaGUgcmVzZWFyY2hlcnMgc3VnZ2VzdCB0aGF0IGEgcGFydGljdWxhcmx5IGVmZmVjdGl2ZSBhcHByb2FjaCBtYXkgYmUgdG8gc3RpZ21hdGl6ZSBhbGNvaG9sLXJlbGF0ZWQgYnJhd2xpbmcsIGFuYWxvZ291cyB0byB0aGUgd2F5IHRoYXQgZHJpdmluZyB1bmRlciB0aGUgaW5mbHVlbmNlIG9mIGFsY29ob2wgaGFzIGJlZW4gbWFkZSBzb2NpYWxseSB1bmFjY2VwdGFibGUuIEFkZGl0aW9uYWwgSW5mb3JtYXRpb24uOiBQbGVhc2UgYWNjZXNzIHRoZXNlIFdlYiBzaXRlcyB2aWEgdGhlIG9ubGluZSB2ZXJzaW9uIG9mIHRoaXMgc3VtbWFyeSBhdCBodHRwOi8vZHguZG9pLm9yZy8xMC4xMzcxL2pvdXJuYWwucG1lZC4wMDUwMTA0LiAiXSwidGl0bGVfZGlzcGxheSI6IkFsY29ob2wgU2FsZXMgYW5kIFJpc2sgb2YgU2VyaW91cyBBc3NhdWx0Iiwic2NvcmUiOjQuNjg0NzY3Mn1dfSwiaGlnaGxpZ2h0aW5nIjp7IjEwLjEzNzEvam91cm5hbC5wb25lLjAxODU0NTciOnsiYWJzdHJhY3QiOlsiT2JqZWN0aXZlczogPGVtPkFsY29ob2w8L2VtPi1yZWxhdGVkIG1vcmJpZGl0eSBhbmQgbW9ydGFsaXR5IGFyZSBzaWduaWZpY2FudCBwdWJsaWMgaGVhbHRoIGlzc3VlcyJdfSwiMTAuMTM3MS9qb3VybmFsLnBvbmUuMDA3MTI4NCI6eyJhYnN0cmFjdCI6WyJcbjxlbT5BbGNvaG9sPC9lbT4gZGVwZW5kZW5jZSBpcyBhIGhldGVyb2dlbmVvdXMgZGlzb3JkZXIgd2hlcmUgc2V2ZXJhbCBzaWduYWxsaW5nIHN5c3RlbXMgcGxheSBpbXBvcnRhbnQiXX0sIjEwLjEzNzEvam91cm5hbC5wb25lLjAwMjc3NTIiOnsiYWJzdHJhY3QiOlsiQmFja2dyb3VuZDogVGhlIG5lZ2F0aXZlIGluZmx1ZW5jZXMgb2YgPGVtPmFsY29ob2w8L2VtPiBvbiBUQiBtYW5hZ2VtZW50IHdpdGggcmVnYXJkIHRvIGRlbGF5cyBpbiBzZWVraW5nIl19LCIxMC4xMzcxL2pvdXJuYWwucG9uZS4wMDMxNDY2Ijp7ImFic3RyYWN0IjpbIiBvZiBhZGRpY3Rpb24gYW5kIG90aGVyIHN0cmVzcy1yZWxhdGVkIGRpc29yZGVycyBsYXRlciBpbiBsaWZlLiBUaGlzIHN1Z2dlc3RzIHRoYXQgYWRvbGVzY2VudCA8ZW0+YWxjb2hvbDwvZW0+IGFidXNlIl19LCIxMC4xMzcxL2pvdXJuYWwucG1lZC4wMDQwMTUxIjp7ImFic3RyYWN0IjpbIkJhY2tncm91bmQ6IDxlbT5BbGNvaG9sPC9lbT4gY29uc3VtcHRpb24gY2F1c2VzIGFuIGVzdGltYXRlZCA0JSBvZiB0aGUgZ2xvYmFsIGRpc2Vhc2UgYnVyZGVuLCBwcm9tcHRpbmciXX0sIjEwLjEzNzEvam91cm5hbC5wb25lLjAxNzk0NjkiOnsiYWJzdHJhY3QiOlsiIG9mIDxlbT5hbGNvaG9sPC9lbT4gYWJ1c2UuIDUtQXphLTLigJktZGVveHljeXRpZGluZSAoNS1BemEtZGMpLCBhbiBpbmhpYml0b3Igb2YgRE5BIG1ldGh5bHRyYW5zZmVyYXNlcywgd2FzIEZEQSBhcHByb3ZlZCJdfSwiMTAuMTM3MS9qb3VybmFsLnBvbmUuMDEzODAyMSI6eyJhYnN0cmFjdCI6WyJCYWNrZ3JvdW5kIGFuZCBBaW06IEhhcm1mdWwgPGVtPmFsY29ob2w8L2VtPiBjb25zdW1wdGlvbiBoYXMgbG9uZyBiZWVuIHJlY29nbml6ZWQgYXMgYmVpbmcgdGhlIG1ham9yIl19LCIxMC4xMzcxL2pvdXJuYWwucG9uZS4wMTk0NDc4Ijp7ImFic3RyYWN0IjpbIkJhY2tncm91bmQ6IEFjY3VyYXRlIGVzdGltYXRlcyBvZiB0aGUgaW1wYWN0IG9mIDxlbT5hbGNvaG9sPC9lbT4gb24gb3ZlcmFsbCBhbmQgYWdlLXNwZWNpZmljIG1vcnRhbGl0eSJdfSwiMTAuMTM3MS9qb3VybmFsLnBvbmUuMDA4NjE5OSI6eyJhYnN0cmFjdCI6WyIgZWZmZWN0cyBvZiA8ZW0+YWxjb2hvbDwvZW0+LiBIb3dldmVyLCBmb3IgbW9kZXJhdGUgPGVtPmFsY29ob2w8L2VtPiBjb25zdW1wdGlvbiB0aGVyZSBhcmUgbm8gY29udHJvbGxlZCBzdHVkaWVzIHNob3dpbmciXX0sIjEwLjEzNzEvam91cm5hbC5wbWVkLjAwNTAxMDQiOnsiYWJzdHJhY3QiOlsiQmFja2dyb3VuZDogPGVtPkFsY29ob2w8L2VtPiBpcyBhIGNvbnRyaWJ1dGluZyBjYXVzZSBvZiB1bmludGVudGlvbmFsIGluanVyaWVzLCBzdWNoIGFzIG1vdG9yIHZlaGljbGUiXX19fQo=
  recorded_at: 2018-05-24 05:20:17 GMT
  recorded_with: vcr/0.1.0, webmockr/0.2.6, crul/0.5.2
- request:
    method: get
    uri: http://api.plos.org/search?q=everything%3A%22sports%20alcohol%22~7&wt=json&start=0&hl.fl=everything&hl=true
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/3.2 crul/0.5.2
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      server: nginx/1.12.2
      date: Thu, 24 May 2018 05:20:17 GMT
      content-type: application/json; charset=UTF-8
      content-length: '22558'
      connection: keep-alive
      last-modified: Wed, 23 May 2018 20:20:59 GMT
      etag: '"YTkwMTgwMDAwMDAwMDAwU29scg=="'
    body:
      encoding: ASCII-8BIT
      string: 
  recorded_at: 2018-05-24 05:20:17 GMT
  recorded_with: vcr/0.1.0, webmockr/0.2.6, crul/0.5.2
- request:
    method: get
    uri: http://api.plos.org/search?q=alcohol&wt=json&start=0&rows=5&hl.fragsize=20&hl.fl=abstract&hl=true
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/3.2 crul/0.5.2
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      server: nginx/1.12.2
      date: Thu, 24 May 2018 05:20:17 GMT
      content-type: application/json; charset=UTF-8
      content-length: '16365'
      connection: keep-alive
      last-modified: Wed, 23 May 2018 20:20:59 GMT
      etag: '"ZjYwYzE4MDAwMDAwMDAwMFNvbHI="'
    body:
      encoding: ASCII-8BIT
      string: 
  recorded_at: 2018-05-24 05:20:17 GMT
  recorded_with: vcr/0.1.0, webmockr/0.2.6, crul/0.5.2
- request:
    method: get
    uri: http://api.plos.org/search?q=alcohol&wt=json&start=0&rows=5&hl.snippets=5&hl.mergeContiguous=true&hl.fl=abstract&hl=true
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/3.2 crul/0.5.2
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      server: nginx/1.12.2
      date: Thu, 24 May 2018 05:20:17 GMT
      content-type: application/json; charset=UTF-8
      content-length: '19099'
      connection: keep-alive
      last-modified: Wed, 23 May 2018 20:20:59 GMT
      etag: '"YTkwMTgwMDAwMDAwMDAwU29scg=="'
    body:
      encoding: ASCII-8BIT
      string: 
  recorded_at: 2018-05-24 05:20:17 GMT
  recorded_with: vcr/0.1.0, webmockr/0.2.6, crul/0.5.2
